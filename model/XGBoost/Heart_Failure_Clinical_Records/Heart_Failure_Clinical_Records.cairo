use core::integer::u32;
use xgboost::inputs::input;
use orion::numbers::{FixedTrait, FP16x16};
use orion::operators::tensor::{Tensor, TensorTrait, FP16x16Tensor, U32Tensor};
use orion::operators::ml::tree_ensemble::core::{NODE_MODES, TreeEnsembleAttributes, TreeEnsemble};
use orion::operators::ml::tree_ensemble::tree_ensemble_classifier::{TreeEnsembleClassifier, POST_TRANSFORM, TreeEnsembleClassifierTrait};
use orion::operators::matrix::{MutMatrix, MutMatrixImpl};

fn main() -> u32 {
    let mut X = input();
    let class_ids: Span<usize> = array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0].span();
    let class_nodeids: Span<usize> = array![2, 6, 7, 8, 9, 15, 16, 18, 19, 20, 21, 24, 27, 28, 29, 30, 3, 4, 5, 11, 12, 13, 15, 16, 17, 19, 22, 23, 25, 26, 2, 5, 7, 8, 10, 11, 15, 17, 18, 21, 22, 23, 27, 28, 29, 31, 32, 3, 4, 7, 8, 9, 14, 16, 17, 18, 19, 22, 24, 25, 27, 28, 2, 5, 7, 8, 9, 13, 16, 17, 18, 21, 22, 23, 27, 28, 29, 32, 33, 34, 3, 4, 7, 8, 9, 12, 16, 17, 19, 20, 21, 25, 26, 27, 30, 31, 32, 2, 4, 5, 8, 11, 12, 14, 15, 20, 21, 22, 24, 25, 28, 29, 30, 3, 6, 8, 9, 10, 13, 14, 18, 19, 20, 21, 24, 25, 27, 28, 2, 5, 7, 8, 9, 12, 13, 17, 19, 20, 21, 23, 25, 26, 3, 6, 8, 9, 10, 13, 14, 18, 19, 20, 21, 24, 25, 27, 28].span();
    let class_treeids: Span<usize> = array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9].span();
    let class_weights: Span<FP16x16> = array![FP16x16 { mag: 32580, sign: false }, FP16x16 { mag: 19660, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 21173, sign: true }, FP16x16 { mag: 24576, sign: false }, FP16x16 { mag: 25022, sign: true }, FP16x16 { mag: 6553, sign: true }, FP16x16 { mag: 37305, sign: true }, FP16x16 { mag: 9830, sign: true }, FP16x16 { mag: 3574, sign: true }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 19660, sign: true }, FP16x16 { mag: 15728, sign: false }, FP16x16 { mag: 9074, sign: true }, FP16x16 { mag: 26214, sign: false }, FP16x16 { mag: 21173, sign: true }, FP16x16 { mag: 10070, sign: false }, FP16x16 { mag: 13428, sign: true }, FP16x16 { mag: 24474, sign: false }, FP16x16 { mag: 19174, sign: true }, FP16x16 { mag: 3994, sign: true }, FP16x16 { mag: 3968, sign: false }, FP16x16 { mag: 28930, sign: true }, FP16x16 { mag: 3774, sign: true }, FP16x16 { mag: 3326, sign: false }, FP16x16 { mag: 20885, sign: false }, FP16x16 { mag: 11813, sign: true }, FP16x16 { mag: 17967, sign: false }, FP16x16 { mag: 1546, sign: true }, FP16x16 { mag: 24501, sign: true }, FP16x16 { mag: 5549, sign: true }, FP16x16 { mag: 24945, sign: false }, FP16x16 { mag: 1048, sign: true }, FP16x16 { mag: 16527, sign: false }, FP16x16 { mag: 14579, sign: false }, FP16x16 { mag: 7101, sign: true }, FP16x16 { mag: 4639, sign: false }, FP16x16 { mag: 20080, sign: true }, FP16x16 { mag: 5715, sign: true }, FP16x16 { mag: 4088, sign: false }, FP16x16 { mag: 20846, sign: false }, FP16x16 { mag: 4417, sign: true }, FP16x16 { mag: 6292, sign: true }, FP16x16 { mag: 25904, sign: true }, FP16x16 { mag: 2780, sign: false }, FP16x16 { mag: 11483, sign: false }, FP16x16 { mag: 11374, sign: true }, FP16x16 { mag: 22580, sign: false }, FP16x16 { mag: 4900, sign: false }, FP16x16 { mag: 8309, sign: false }, FP16x16 { mag: 19125, sign: true }, FP16x16 { mag: 15070, sign: false }, FP16x16 { mag: 4450, sign: true }, FP16x16 { mag: 5048, sign: true }, FP16x16 { mag: 22447, sign: true }, FP16x16 { mag: 346, sign: false }, FP16x16 { mag: 1961, sign: true }, FP16x16 { mag: 5199, sign: true }, FP16x16 { mag: 2750, sign: false }, FP16x16 { mag: 20091, sign: false }, FP16x16 { mag: 16962, sign: true }, FP16x16 { mag: 2675, sign: false }, FP16x16 { mag: 4632, sign: true }, FP16x16 { mag: 20605, sign: false }, FP16x16 { mag: 13086, sign: false }, FP16x16 { mag: 1773, sign: true }, FP16x16 { mag: 3195, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 3705, sign: true }, FP16x16 { mag: 17323, sign: true }, FP16x16 { mag: 1282, sign: true }, FP16x16 { mag: 2486, sign: false }, FP16x16 { mag: 15838, sign: false }, FP16x16 { mag: 3717, sign: true }, FP16x16 { mag: 2800, sign: true }, FP16x16 { mag: 19001, sign: false }, FP16x16 { mag: 17047, sign: true }, FP16x16 { mag: 5289, sign: true }, FP16x16 { mag: 23275, sign: true }, FP16x16 { mag: 4246, sign: true }, FP16x16 { mag: 7766, sign: false }, FP16x16 { mag: 11001, sign: true }, FP16x16 { mag: 6648, sign: false }, FP16x16 { mag: 18973, sign: false }, FP16x16 { mag: 1744, sign: false }, FP16x16 { mag: 14543, sign: false }, FP16x16 { mag: 3589, sign: true }, FP16x16 { mag: 18680, sign: true }, FP16x16 { mag: 7110, sign: false }, FP16x16 { mag: 7795, sign: true }, FP16x16 { mag: 13968, sign: false }, FP16x16 { mag: 2969, sign: true }, FP16x16 { mag: 17061, sign: false }, FP16x16 { mag: 15644, sign: true }, FP16x16 { mag: 21791, sign: true }, FP16x16 { mag: 3773, sign: true }, FP16x16 { mag: 3574, sign: true }, FP16x16 { mag: 16739, sign: false }, FP16x16 { mag: 5999, sign: true }, FP16x16 { mag: 6354, sign: false }, FP16x16 { mag: 18190, sign: false }, FP16x16 { mag: 4643, sign: true }, FP16x16 { mag: 11814, sign: false }, FP16x16 { mag: 13552, sign: true }, FP16x16 { mag: 1202, sign: false }, FP16x16 { mag: 6054, sign: true }, FP16x16 { mag: 5849, sign: false }, FP16x16 { mag: 14224, sign: false }, FP16x16 { mag: 4115, sign: true }, FP16x16 { mag: 16115, sign: true }, FP16x16 { mag: 20445, sign: true }, FP16x16 { mag: 890, sign: true }, FP16x16 { mag: 630, sign: false }, FP16x16 { mag: 5074, sign: true }, FP16x16 { mag: 3109, sign: false }, FP16x16 { mag: 22490, sign: false }, FP16x16 { mag: 8834, sign: false }, FP16x16 { mag: 3197, sign: true }, FP16x16 { mag: 2379, sign: true }, FP16x16 { mag: 16231, sign: true }, FP16x16 { mag: 3044, sign: true }, FP16x16 { mag: 13010, sign: false }, FP16x16 { mag: 17989, sign: true }, FP16x16 { mag: 14400, sign: false }, FP16x16 { mag: 7905, sign: true }, FP16x16 { mag: 3984, sign: false }, FP16x16 { mag: 18366, sign: true }, FP16x16 { mag: 4537, sign: true }, FP16x16 { mag: 16475, sign: false }, FP16x16 { mag: 6657, sign: false }, FP16x16 { mag: 13373, sign: true }, FP16x16 { mag: 3066, sign: true }, FP16x16 { mag: 10540, sign: false }, FP16x16 { mag: 16712, sign: false }, FP16x16 { mag: 7974, sign: true }, FP16x16 { mag: 12544, sign: true }, FP16x16 { mag: 7301, sign: false }, FP16x16 { mag: 8723, sign: true }, FP16x16 { mag: 11634, sign: false }, FP16x16 { mag: 17892, sign: true }, FP16x16 { mag: 4866, sign: false }, FP16x16 { mag: 8926, sign: true }, FP16x16 { mag: 3429, sign: true }, FP16x16 { mag: 1984, sign: false }, FP16x16 { mag: 19182, sign: false }, FP16x16 { mag: 6775, sign: false }, FP16x16 { mag: 2604, sign: true }, FP16x16 { mag: 13592, sign: true }, FP16x16 { mag: 1396, sign: true }, FP16x16 { mag: 10714, sign: false }, FP16x16 { mag: 1790, sign: true }, FP16x16 { mag: 15188, sign: true }, FP16x16 { mag: 11460, sign: false }, FP16x16 { mag: 16444, sign: true }, FP16x16 { mag: 4475, sign: true }, FP16x16 { mag: 6925, sign: false }, FP16x16 { mag: 8370, sign: true }].span();
    let classlabels: Span<usize> = array![0, 1].span();
    let nodes_falsenodeids: Span<usize> = array![10, 3, 0, 9, 8, 7, 0, 0, 0, 0, 22, 21, 20, 17, 16, 0, 0, 19, 0, 0, 0, 0, 30, 25, 0, 29, 28, 0, 0, 0, 0, 6, 5, 4, 0, 0, 0, 18, 17, 14, 13, 12, 0, 0, 0, 16, 0, 0, 0, 20, 0, 24, 23, 0, 0, 26, 0, 0, 12, 3, 0, 9, 6, 0, 8, 0, 0, 11, 0, 0, 24, 19, 16, 0, 18, 0, 0, 23, 22, 0, 0, 0, 30, 29, 28, 0, 0, 0, 32, 0, 0, 10, 5, 4, 0, 0, 9, 8, 0, 0, 0, 20, 19, 18, 15, 0, 17, 0, 0, 0, 0, 26, 23, 0, 25, 0, 0, 28, 0, 0, 10, 3, 0, 9, 6, 0, 8, 0, 0, 0, 24, 19, 14, 0, 18, 17, 0, 0, 0, 23, 22, 0, 0, 0, 30, 29, 28, 0, 0, 0, 34, 33, 0, 0, 0, 10, 5, 4, 0, 0, 9, 8, 0, 0, 0, 22, 13, 0, 21, 18, 17, 0, 0, 20, 0, 0, 0, 28, 27, 26, 0, 0, 0, 32, 31, 0, 0, 0, 6, 3, 0, 5, 0, 0, 16, 9, 0, 13, 12, 0, 0, 15, 0, 0, 26, 23, 22, 21, 0, 0, 0, 25, 0, 0, 30, 29, 0, 0, 0, 22, 11, 4, 0, 10, 7, 0, 9, 0, 0, 0, 15, 14, 0, 0, 21, 20, 19, 0, 0, 0, 0, 26, 25, 0, 0, 28, 0, 0, 10, 3, 0, 9, 6, 0, 8, 0, 0, 0, 14, 13, 0, 0, 22, 21, 18, 0, 20, 0, 0, 0, 24, 0, 26, 0, 0, 22, 11, 4, 0, 10, 7, 0, 9, 0, 0, 0, 15, 14, 0, 0, 21, 20, 19, 0, 0, 0, 0, 26, 25, 0, 0, 28, 0, 0].span();
    let nodes_featureids: Span<usize> = array![11, 8, 0, 8, 6, 4, 0, 0, 0, 0, 7, 0, 2, 4, 0, 0, 0, 7, 0, 0, 0, 0, 11, 2, 0, 5, 6, 0, 0, 0, 0, 11, 2, 6, 0, 0, 0, 7, 0, 4, 10, 2, 0, 0, 0, 2, 0, 0, 0, 4, 0, 9, 2, 0, 0, 11, 0, 0, 11, 2, 0, 11, 6, 0, 4, 0, 0, 4, 0, 0, 4, 7, 11, 0, 6, 0, 0, 7, 11, 0, 0, 0, 7, 0, 6, 0, 0, 0, 8, 0, 0, 11, 8, 4, 0, 0, 8, 6, 0, 0, 0, 7, 2, 0, 11, 0, 8, 0, 0, 0, 0, 4, 8, 0, 6, 0, 0, 7, 0, 0, 11, 2, 0, 11, 6, 0, 8, 0, 0, 0, 4, 7, 11, 0, 2, 6, 0, 0, 0, 7, 11, 0, 0, 0, 8, 11, 8, 0, 0, 0, 7, 6, 0, 0, 0, 11, 2, 6, 0, 0, 2, 9, 0, 0, 0, 4, 11, 0, 2, 7, 6, 0, 0, 7, 0, 0, 0, 8, 3, 2, 0, 0, 0, 7, 8, 0, 0, 0, 11, 6, 0, 0, 0, 0, 4, 11, 0, 0, 7, 0, 0, 2, 0, 0, 8, 11, 7, 2, 0, 0, 0, 9, 0, 0, 2, 6, 0, 0, 0, 11, 8, 7, 0, 2, 2, 0, 2, 0, 0, 0, 8, 11, 0, 0, 2, 11, 0, 0, 0, 0, 0, 4, 2, 0, 0, 7, 0, 0, 11, 8, 0, 8, 6, 0, 2, 0, 0, 0, 6, 11, 0, 0, 4, 2, 1, 0, 8, 0, 0, 0, 0, 0, 8, 0, 0, 11, 8, 7, 0, 2, 2, 0, 2, 0, 0, 0, 8, 5, 0, 0, 2, 11, 10, 0, 0, 0, 0, 7, 2, 0, 0, 6, 0, 0].span();
    let nodes_missing_value_tracks_true: Span<usize> = array![1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0].span();
    let nodes_modes: Span<NODE_MODES> = array![NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF].span();
    let nodes_nodeids: Span<usize> = array![0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28].span();
    let nodes_treeids: Span<usize> = array![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9].span();
    let nodes_truenodeids: Span<usize> = array![1, 2, 0, 4, 5, 6, 0, 0, 0, 0, 11, 12, 13, 14, 15, 0, 0, 18, 0, 0, 0, 0, 23, 24, 0, 26, 27, 0, 0, 0, 0, 1, 2, 3, 0, 0, 0, 7, 8, 9, 10, 11, 0, 0, 0, 15, 0, 0, 0, 19, 0, 21, 22, 0, 0, 25, 0, 0, 1, 2, 0, 4, 5, 0, 7, 0, 0, 10, 0, 0, 13, 14, 15, 0, 17, 0, 0, 20, 21, 0, 0, 0, 25, 26, 27, 0, 0, 0, 31, 0, 0, 1, 2, 3, 0, 0, 6, 7, 0, 0, 0, 11, 12, 13, 14, 0, 16, 0, 0, 0, 0, 21, 22, 0, 24, 0, 0, 27, 0, 0, 1, 2, 0, 4, 5, 0, 7, 0, 0, 0, 11, 12, 13, 0, 15, 16, 0, 0, 0, 20, 21, 0, 0, 0, 25, 26, 27, 0, 0, 0, 31, 32, 0, 0, 0, 1, 2, 3, 0, 0, 6, 7, 0, 0, 0, 11, 12, 0, 14, 15, 16, 0, 0, 19, 0, 0, 0, 23, 24, 25, 0, 0, 0, 29, 30, 0, 0, 0, 1, 2, 0, 4, 0, 0, 7, 8, 0, 10, 11, 0, 0, 14, 0, 0, 17, 18, 19, 20, 0, 0, 0, 24, 0, 0, 27, 28, 0, 0, 0, 1, 2, 3, 0, 5, 6, 0, 8, 0, 0, 0, 12, 13, 0, 0, 16, 17, 18, 0, 0, 0, 0, 23, 24, 0, 0, 27, 0, 0, 1, 2, 0, 4, 5, 0, 7, 0, 0, 0, 11, 12, 0, 0, 15, 16, 17, 0, 19, 0, 0, 0, 23, 0, 25, 0, 0, 1, 2, 3, 0, 5, 6, 0, 8, 0, 0, 0, 12, 13, 0, 0, 16, 17, 18, 0, 0, 0, 0, 23, 24, 0, 0, 27, 0, 0].span();
    let nodes_values: Span<FP16x16> = array![FP16x16 { mag: 16209, sign: false }, FP16x16 { mag: 44002, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 49620, sign: false }, FP16x16 { mag: 14928, sign: false }, FP16x16 { mag: 13405, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 7731, sign: false }, FP16x16 { mag: 46470, sign: false }, FP16x16 { mag: 16082, sign: false }, FP16x16 { mag: 13405, sign: false }, FP16x16 { mag: 22043, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 6995, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 48044, sign: false }, FP16x16 { mag: 330, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 15643, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 14809, sign: false }, FP16x16 { mag: 723, sign: false }, FP16x16 { mag: 17073, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 7731, sign: false }, FP16x16 { mag: 46470, sign: false }, FP16x16 { mag: 13405, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 1768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 19017, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 8440, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 781, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 38248, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 14809, sign: false }, FP16x16 { mag: 480, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 11194, sign: false }, FP16x16 { mag: 21800, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 18369, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 15887, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 18369, sign: false }, FP16x16 { mag: 6259, sign: false }, FP16x16 { mag: 18657, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 22515, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 12886, sign: false }, FP16x16 { mag: 33001, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 9683, sign: false }, FP16x16 { mag: 47066, sign: false }, FP16x16 { mag: 8095, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 42130, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 16209, sign: false }, FP16x16 { mag: 44002, sign: false }, FP16x16 { mag: 33264, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 49620, sign: false }, FP16x16 { mag: 14928, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 6995, sign: false }, FP16x16 { mag: 16082, sign: false }, FP16x16 { mag: 44683, sign: false }, FP16x16 { mag: 17375, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 33704, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 18369, sign: false }, FP16x16 { mag: 33704, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 18239, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 13990, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 14809, sign: false }, FP16x16 { mag: 480, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 11194, sign: false }, FP16x16 { mag: 21800, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 39321, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 18369, sign: false }, FP16x16 { mag: 6259, sign: false }, FP16x16 { mag: 18657, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 4255, sign: false }, FP16x16 { mag: 17549, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 12886, sign: false }, FP16x16 { mag: 33001, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 40257, sign: false }, FP16x16 { mag: 39414, sign: false }, FP16x16 { mag: 38385, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 13990, sign: false }, FP16x16 { mag: 8532, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 14809, sign: false }, FP16x16 { mag: 723, sign: false }, FP16x16 { mag: 17073, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 4778, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 18369, sign: false }, FP16x16 { mag: 18308, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 6450, sign: false }, FP16x16 { mag: 6259, sign: false }, FP16x16 { mag: 16040, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 10787, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 40257, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 3265, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 13990, sign: false }, FP16x16 { mag: 53365, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 11194, sign: false }, FP16x16 { mag: 21800, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 22043, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 13405, sign: false }, FP16x16 { mag: 17375, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 23235, sign: false }, FP16x16 { mag: 4049, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 1852, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 42130, sign: false }, FP16x16 { mag: 39414, sign: false }, FP16x16 { mag: 9683, sign: false }, FP16x16 { mag: 4255, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 19017, sign: false }, FP16x16 { mag: 28275, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 39414, sign: false }, FP16x16 { mag: 44002, sign: false }, FP16x16 { mag: 3313, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 4941, sign: false }, FP16x16 { mag: 426, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 1893, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 47747, sign: false }, FP16x16 { mag: 5947, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 6873, sign: false }, FP16x16 { mag: 17375, sign: false }, FP16x16 { mag: 22043, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 13405, sign: false }, FP16x16 { mag: 3319, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 7731, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 16209, sign: false }, FP16x16 { mag: 40257, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 49620, sign: false }, FP16x16 { mag: 15047, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 1174, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 10240, sign: false }, FP16x16 { mag: 45362, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 18369, sign: false }, FP16x16 { mag: 6450, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 47747, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 36938, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 40257, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 39414, sign: false }, FP16x16 { mag: 44002, sign: false }, FP16x16 { mag: 3313, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 4941, sign: false }, FP16x16 { mag: 426, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 1893, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 47747, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 6873, sign: false }, FP16x16 { mag: 17375, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 6259, sign: false }, FP16x16 { mag: 4811, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 14292, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }].span();
    let base_values: Option<Span<FP16x16>> = Option::None;
    let post_transform = POST_TRANSFORM::SOFTMAX;

    let tree_ids: Span<usize> = array![0, 1, 2, 3, 4, 5, 6, 7, 8, 9].span();
let mut root_index: Felt252Dict<usize> = Default::default();
    root_index.insert(0, 0);
    root_index.insert(1, 31);
    root_index.insert(2, 58);
    root_index.insert(3, 91);
    root_index.insert(4, 120);
    root_index.insert(5, 155);
    root_index.insert(6, 188);
    root_index.insert(7, 219);
    root_index.insert(8, 248);
    root_index.insert(9, 275);
let mut node_index: Felt252Dict<usize> = Default::default();
    node_index.insert(2089986280348253421170679821480865132823066470938446095505822317253594081284, 0);
    node_index.insert(2001140082530619239661729809084578298299223810202097622761632384561112390979, 1);
    node_index.insert(2592670241084192212354027440049085852792506518781954896144296316131790403900, 2);
    node_index.insert(2960591271376829378356567803618548672034867345123727178628869426548453833420, 3);
    node_index.insert(458933264452572171106695256465341160654132084710250671055261382009315664425, 4);
    node_index.insert(3344223123784052057366048933846905716067140384361791026153972616805110454637, 5);
    node_index.insert(658476905110174425295568215706634733332002869979287079110965040248935650599, 6);
    node_index.insert(2836212335642438363012490794290757623813171043187182819737087983331902926990, 7);
    node_index.insert(3496601277869056110810900082189273917786762659443522403285387602989271154262, 8);
    node_index.insert(1249294489531540970169611621067106471309281870082955806338234725206665112557, 9);
    node_index.insert(2161697998033672097816961828039488190903838124365465380011173778905747857792, 10);
    node_index.insert(1129815197211541481934112806673325772687763881719835256646064516195041515616, 11);
    node_index.insert(2592593088135949192377729543480191336537305484235681164569491942155715064163, 12);
    node_index.insert(578223957014284909949571568465953382377214912750427143720957054706073492593, 13);
    node_index.insert(1645617302026197421098102802983206579163506957138012501615708926120228167528, 14);
    node_index.insert(2809438816810155970395166036110536928593305127049404137239671320081144123490, 15);
    node_index.insert(2496308528011391755709310159103918074725328650411689040761791240500618770096, 16);
    node_index.insert(2003594778587446957576114348312422277631766150749194167061999666337236425714, 17);
    node_index.insert(2215681478480673835576618830034726157921200517935329010004363713426342305479, 18);
    node_index.insert(3185925835074464079989752015681272863271067691852543168049845807561733691707, 19);
    node_index.insert(1207265836470221457484062512091666004839070622130697586496866096347024057755, 20);
    node_index.insert(1870230949202979679764944800468118671928852128047695497376875566624821494262, 21);
    node_index.insert(618060852536781954395603948693216564334274573299243914053414488061601327758, 22);
    node_index.insert(232760707548494477255512699093366059519467428168757247456690480397246371463, 23);
    node_index.insert(1617386247965480308136742715422077429967341022950306068917456849194882895900, 24);
    node_index.insert(654822874782506608656472905579051041410086644071534146326024101025575400153, 25);
    node_index.insert(525638101901638132526332140778087078272370083489998903571807698910013602668, 26);
    node_index.insert(3091640181556387972179279087539287892670640556085669903494551919685982442095, 27);
    node_index.insert(1425411460578159050163131982087304445715005458700346341117759372943452688022, 28);
    node_index.insert(1722933265299553894839124723076027659619615015638971980461286818493531809034, 29);
    node_index.insert(3325117385742592388671007840076299062858228097051060057749225651290693960897, 30);
    node_index.insert(1089549915800264549621536909767699778745926517555586332772759280702396009108, 31);
    node_index.insert(1321142004022994845681377299801403567378503530250467610343381590909832171180, 32);
    node_index.insert(2592987851775965742543459319508348457290966253241455514226127639100457844774, 33);
    node_index.insert(2492755623019086109032247218615964389726368532160653497039005814484393419348, 34);
    node_index.insert(1323616023845704258113538348000047149470450086307731200728039607710316625916, 35);
    node_index.insert(2602806075100213744247558189988576480101725415744802768676593239465413062437, 36);
    node_index.insert(2133001354671050566009032930947037407966162226953928247738970920578517401509, 37);
    node_index.insert(2028511445532887286219926414461404880922973379000283365640739306412060589984, 38);
    node_index.insert(2172916877564771226634785492487495706550975402295255580723040851110825214452, 39);
    node_index.insert(443365385840578145598469834664300070798229423724186017253666927387247171605, 40);
    node_index.insert(729855921817393983434977875314769926547493289803739783677327742608094432090, 41);
    node_index.insert(1914743748046569081169775800674968385592598418967909792072913293994383786914, 42);
    node_index.insert(1905186476891772648228095881141294869145589945808189361436653544018360062058, 43);
    node_index.insert(3478750059048257206950245886704031215117884591408631705246789143235927594297, 44);
    node_index.insert(1360650719458388540862313348610603767210254471680075689691583578268553163977, 45);
    node_index.insert(2835713808086902981032735997270657320272844799255056915522524373324489601373, 46);
    node_index.insert(2986663520528822735284621823964735413577139476770655672122727824709194687603, 47);
    node_index.insert(1825333793531058160861167717714462972423174611000039840482609781127255637598, 48);
    node_index.insert(1024913351818824646487382938602321386730253744062080624635537951707194106399, 49);
    node_index.insert(2599448448500431138881373437594349718877372893291344376695657838812023179527, 50);
    node_index.insert(451364988124317376983967832520113376897469797583816225692425024081429572552, 51);
    node_index.insert(3295743349857685708130061841891813766781696896360427904797133668714766288639, 52);
    node_index.insert(635054810399530974899862825097786174506980579856629221717310950235690648854, 53);
    node_index.insert(339786444757940259369717515915894383895925578685292827375956676816767326679, 54);
    node_index.insert(3421981808386406012031343246461618827885947549668357496508839391182201566690, 55);
    node_index.insert(2328617973064222680897398176660550965542616161125423192090480786516480291168, 56);
    node_index.insert(2383947575186586771181664773657716262221059393194829992023257744387933948106, 57);
    node_index.insert(1637368371864026355245122316446106576874611007407245016652355316950184561542, 58);
    node_index.insert(1207699383798263883125605407307435965808923448511613904826718551574712750645, 59);
    node_index.insert(1180550645873507273865212362837104046225859416703538577277065670066180087996, 60);
    node_index.insert(2472368796876167851123807933892689310864199328863324614163271115835436643256, 61);
    node_index.insert(2178161520066714737684323463974044933282313051386084149915030950231093462467, 62);
    node_index.insert(3173857952392006478115535740648337122591944728347430823115535852278920741329, 63);
    node_index.insert(3520866866675103377451014823284046708949378458998098483918774175589256898262, 64);
    node_index.insert(2177941723204159354958359305495360053392108189585761207084264896971635476845, 65);
    node_index.insert(2864394597864040652203681823189877789250870157950998029096571449554775379175, 66);
    node_index.insert(2897433825911865985719211501544370326016492217831301730855907643627594369342, 67);
    node_index.insert(859854829566932180582991726609554142743294771126929508994399727707123524911, 68);
    node_index.insert(3340556370013659658837668538361919723611956717010849115344219019131584232987, 69);
    node_index.insert(969684220953017614408764005228364528747533427394672852952823310808481653043, 70);
    node_index.insert(2517958524955101484176646974264278027523630430782643866142783043852607952501, 71);
    node_index.insert(3562411576101596305100373214898963557357005221009821819112293537238776158186, 72);
    node_index.insert(749698053908647177037465778486662825000910076701946452954539222617221207046, 73);
    node_index.insert(3388946524721421849714599546545678324338215767142993729985868447908100375132, 74);
    node_index.insert(7637028948727922733190725937767998455218464297313212093014958707917020671, 75);
    node_index.insert(2517306361976272603816496570574411846655171384183949645847139939357796693732, 76);
    node_index.insert(2420913215565887543799662323254877493998803114195008143295091289913293256497, 77);
    node_index.insert(2875257908119852201562215382296572595654261721400839230360586454297239617850, 78);
    node_index.insert(1939077377152096562358173157873289577680472319148247371233138009534014937220, 79);
    node_index.insert(1446072649950821241933384277965301246106855819219171501158751949060726623809, 80);
    node_index.insert(3130267397385492591575354583425648344229275099238257091713993766138436159335, 81);
    node_index.insert(1627740877632935460866966989915636240876204276362161938570742257408612034825, 82);
    node_index.insert(18812983329638070123911265232206611327406041555309768424776309982773859021, 83);
    node_index.insert(1192869170158229529903255333206549361717161885832741280488953533385075866204, 84);
    node_index.insert(3099691363740596292859253445767412967937130039368944273448648119934969733400, 85);
    node_index.insert(3304785805426229828055228673657821571114260561238520341512083247689366195606, 86);
    node_index.insert(434088034004607695290891899368599507173802736619164622565051909392734336550, 87);
    node_index.insert(3348191963059048165999421217249798215760269723596648391136347870176690374333, 88);
    node_index.insert(707709317931565764288498453596808420365946795013488488996182821370824818744, 89);
    node_index.insert(1486810716377518034612806600369164000000894225791965451763254656555115509004, 90);
    node_index.insert(936823097115478672163131070534991867793647843312823827742596382032679996195, 91);
    node_index.insert(2908682032041418908903105681227249033483541201006723240850136728317167492227, 92);
    node_index.insert(576657123605396437968823113955952586959670965011232700393892413073919304299, 93);
    node_index.insert(1481896535808584724908081559736405324517902569915916348692801954386091870245, 94);
    node_index.insert(1078504723311822443900992338775481548059850561756203702548080974952533155775, 95);
    node_index.insert(3600002659897393349182084561058064793711202886846821609483133344058737149025, 96);
    node_index.insert(3368719563563263866230472954713864957694379602883426421349849633317984059809, 97);
    node_index.insert(3061985788110370164702870586311819183603331041211221464100695473643557007437, 98);
    node_index.insert(2457099323156468926195938030605866764815394034211788952682350929421057342674, 99);
    node_index.insert(2957842788546916169046256209697117030459247586361719671122517787383587849165, 100);
    node_index.insert(2312904897276702323312886413034958954274798496010131800578489850623882072366, 101);
    node_index.insert(2151530441654757675731379578805793696168111600993272271717851052954293636901, 102);
    node_index.insert(2104364994557927682520946967259590209035689080176497654779930510810046951574, 103);
    node_index.insert(3199488041090936489363178144929027873872059450647899792781514666347387729515, 104);
    node_index.insert(3003392184156862687155729961085723294905891707023296976854703666526389243546, 105);
    node_index.insert(1168511129577811277900281373322173199612831276751979025648851511004523885887, 106);
    node_index.insert(3522770481099539757473772962774329230030404691633666911783691170238527667814, 107);
    node_index.insert(3322327550517560823044484691093903230789159268457921815536139666534827192171, 108);
    node_index.insert(1162473252660824370456934380795166353138774451855957786381898009445374488118, 109);
    node_index.insert(2671608988904837938632531262741770156077438296462433993290547971925052126954, 110);
    node_index.insert(358194575279586271904382788162838257265339457883893416707044873827125229867, 111);
    node_index.insert(3362965508964432151663920983562426121408003412068000958618214548672434094300, 112);
    node_index.insert(1239648298553234646939570064257020961092763509334727401012518218498156380486, 113);
    node_index.insert(3493913497940436650375014527113652622013869513840757320497301657402449972230, 114);
    node_index.insert(571988592157430878158062168955539850514039025062500939855736049269761168333, 115);
    node_index.insert(3075110239313730273937327404235422507348035267175610349491461960109219495860, 116);
    node_index.insert(1432450789534329104068533633787922871200313114589248557896707864889041612680, 117);
    node_index.insert(302596248345033364378089077175157718894704953413483777342876542269261215216, 118);
    node_index.insert(291037622990672177460439773294848038497475552860480971440427414621308903178, 119);
    node_index.insert(469486474782544164430568959439120883383782181399389907385047779197726806430, 120);
    node_index.insert(3512521406437956009189089258567111789473785799907488469636118378769715425964, 121);
    node_index.insert(2556139128341700567231916301725351155453738182692001295135848448652163014397, 122);
    node_index.insert(3465043718230761803333064436233095750064993904445202331528878419074385927073, 123);
    node_index.insert(1484044891644535909221789528912343377988032083750620401102632587429863384003, 124);
    node_index.insert(2461928659912411191191030223391335469157788575464844862110246923127701977319, 125);
    node_index.insert(2281242043976231097131811306819088407938037212974538659998798361039396044155, 126);
    node_index.insert(3401905887745651121992197760975218515746916177849269185510226539905893010873, 127);
    node_index.insert(3598997708465887406346585735116498533400367718313911603017854078295775741724, 128);
    node_index.insert(3333324623402098338894983297253618187074385014448599840723759915876610845540, 129);
    node_index.insert(2252912169951643482977397680420757893646357174664273028264360445856571205254, 130);
    node_index.insert(2897766199550857496661339086497252536035518270841738435573089042896012812921, 131);
    node_index.insert(954287973496925640659330696971147042810006270938574818198760963073154507812, 132);
    node_index.insert(2876279218474209466275302645002734284339699883191492579155580470406630859926, 133);
    node_index.insert(1848190041985692961829962406152782269559956645511776235582075116890880719484, 134);
    node_index.insert(923663909381896559982797220241311256195792502651818582201480353643644222250, 135);
    node_index.insert(2088478630077571273740795363670445663310387597666884657078292345302282755084, 136);
    node_index.insert(1801891331857081939919875077230338503549411328786774003354364656498699418486, 137);
    node_index.insert(138094253779838988632823274937659114257443034800106565258167219434023255012, 138);
    node_index.insert(472871471238344208841671078183695650314116291132690164137920765876914702004, 139);
    node_index.insert(1083111595366161013612995500722115777250104276373830116839292400939551201097, 140);
    node_index.insert(3053768917020982936726632027503938350915778332966994623602875582872667062441, 141);
    node_index.insert(1461359130081029938716225569780167414335776236327257939133664851541994538128, 142);
    node_index.insert(1222758656952731126498796942860980694829173471246742834317693616068291402568, 143);
    node_index.insert(168611340138356552794649222047432749671649303723030650111647062890135225882, 144);
    node_index.insert(3395143928005575554297146745055876690387742647913855096395412385413632036983, 145);
    node_index.insert(1759782423947318239523147729336594097739779868943177984364257788861600808988, 146);
    node_index.insert(2206775911220385343641213328442886478305974769531222717439022761341045716307, 147);
    node_index.insert(3358780555804975216030885599754419193947798354354547356823782154322118720287, 148);
    node_index.insert(1111813458332202639911109636981406316811131177843225027992007734614827627313, 149);
    node_index.insert(2045487687511590244623638960281112628468858291134487008011326264196884386282, 150);
    node_index.insert(46668246436245628123570888425050310839736268328412524871489587803475305638, 151);
    node_index.insert(2106039677891057508048821642064764668124186030049864189300798566041923147141, 152);
    node_index.insert(821692772369674280474400690236536397324309004508960717362960843777753719540, 153);
    node_index.insert(1860650757001202765150438733575625681607948729793272391404050535156944079848, 154);
    node_index.insert(2941083907689010536497253969578701440794094793277200004061830176674600429738, 155);
    node_index.insert(3515557115945123685249720924176918246289668839127088842764552624387741006658, 156);
    node_index.insert(1086529665842980980708131000626441572702884934518178946087373814825190924452, 157);
    node_index.insert(1577600695648543593850511011274446155472648910099879524512420959593356117933, 158);
    node_index.insert(369637003681923374235868884090690746347960427214527191195034764982555476019, 159);
    node_index.insert(3125779721945763288433380755626503099347902113189413000518025153445630158401, 160);
    node_index.insert(887847247223813684398612989470912626224213579404697697378648600264021898263, 161);
    node_index.insert(16619444747250762036595255150391108469240603040189807430655609336266920022, 162);
    node_index.insert(2628075195767292674590700502403560116319020921182344709587066307456648985625, 163);
    node_index.insert(2438502160866250745334110983854834216010319001088729328948569151470890138896, 164);
    node_index.insert(3295369764201403697020931568280448079372569883207512770197546917303872097494, 165);
    node_index.insert(2800494936737086207139723655044366722420138476182528385634707980262139812406, 166);
    node_index.insert(3132606217959475072121780021316596349712964739992677349194234125743516464040, 167);
    node_index.insert(656021941148415165431333659891582324769158567011100828420172665422894153586, 168);
    node_index.insert(502703338856261709292864170013545966845935535351074954483261434537992997511, 169);
    node_index.insert(73512124624850034004821169525490264470298981460850014453376484774048511459, 170);
    node_index.insert(1392730751941015904834170795863393469166319919808784999782168001951603553895, 171);
    node_index.insert(2988289546868592194315183945254444543212197816696981958493913794886551611513, 172);
    node_index.insert(979431136069079287135593162000984658226807290458275991182246872277036129356, 173);
    node_index.insert(856943209398923396711050319478771501189050037852652426222556691686929632402, 174);
    node_index.insert(1941012177571374253726872982008395598780355640039797272195174713692653277594, 175);
    node_index.insert(1426149190894741167512944894422442006670565444064614612171880572398408084056, 176);
    node_index.insert(307400047828830747378246360491053993977321654276483718143843435219876451230, 177);
    node_index.insert(1009421008998306236551501046932020462914916879257304842595864258293742761740, 178);
    node_index.insert(3256176412377098988575417840128465531077504085894328717051379936447514191186, 179);
    node_index.insert(3305848966554532095290247342580752807146796932135482143293219897531216578299, 180);
    node_index.insert(607625718043780271475974770351771515546943468919419748816862096929654406337, 181);
    node_index.insert(1665281334065057871438733352612012655874011589073591544143198622855569173034, 182);
    node_index.insert(394742721673757121643751589444729380604236491723636875392537487257012512829, 183);
    node_index.insert(1360875574080852540955700242525552018951407228060306866138861284282652441906, 184);
    node_index.insert(2379144016267215238904458313865422097368282572679846149565690949412701051153, 185);
    node_index.insert(1444807216109762805889935776422689508831631881700904753283902142447814237961, 186);
    node_index.insert(615473356427511602742868332176421407130220236760685878376563006878833631194, 187);
    node_index.insert(2741690337285522037147443857948052150995543108052651970979313688522374979162, 188);
    node_index.insert(2650761223990278311391161549562769924185646525933398576366599729646470331982, 189);
    node_index.insert(2394106477146207452133044987332160354989937730594050309156799249985649638789, 190);
    node_index.insert(3221546555590725210494412430124213369510944559726456557849915592640050076870, 191);
    node_index.insert(2228295198404333119017490955293049364627235124737441027193226305830899856739, 192);
    node_index.insert(1500728334208813541595897459030132460053541518563429199208970697149622864812, 193);
    node_index.insert(3370962038708719437204954491911331590397946488012391643100034534008512344333, 194);
    node_index.insert(1316763448112859394321117487731514423037681243887874196205047698610445360084, 195);
    node_index.insert(2675592129551529371290790685310559984125358643115246876322043698639381749698, 196);
    node_index.insert(1528859248215310863238401709462632347578470922545446103095571132030945850144, 197);
    node_index.insert(3611690624124252450410480577094491432815522006798435310057357000073481753133, 198);
    node_index.insert(1439036764276032966983559284365334079695374463347000527220102853724684269113, 199);
    node_index.insert(1258410373276784381071702787851529424400817190522556443076585835045523985589, 200);
    node_index.insert(3159488699709692726987767167803380927365063049737489808755263770463033523780, 201);
    node_index.insert(2807310041875874050147290560038271475334414983815271892746689403530695500639, 202);
    node_index.insert(2760947231432611426328726855671585230160496130265856290376499201036050674179, 203);
    node_index.insert(2142335695882300759307997271840765816056010244005970160668770654636608188271, 204);
    node_index.insert(2160448941858509289149478473971004089859456397815176217599070133949273511883, 205);
    node_index.insert(926997528372746383010369955865819772959221265445185234692339748986760791340, 206);
    node_index.insert(1672721509649019380284968447290565280623486696599930956019706859770296716577, 207);
    node_index.insert(2044080853056546244274530781077755499242200512671943937125918468536782172831, 208);
    node_index.insert(1504601056661299458885429075200265364428656859551761054760045995437482980030, 209);
    node_index.insert(163158120268944789882730811689216610896032498223040702467679914336094711763, 210);
    node_index.insert(1907397333478479142428618991020436874602209770802915399403021719372799685074, 211);
    node_index.insert(108692015205244708734235833879450021132747113676085717268144240055994191881, 212);
    node_index.insert(981807391152472621378135497321855113084793600143467941644235042162299415346, 213);
    node_index.insert(2072405531077937403998757822996919197154392212738629318971991811226339073650, 214);
    node_index.insert(232366471498875663468206944797420870187179632212573899580695296930913470560, 215);
    node_index.insert(2139523020619835728131188669449122469629968768643180522491992470702975042551, 216);
    node_index.insert(215933281718080348667388901202173181096303062946332136031769826159461754944, 217);
    node_index.insert(2737585777119999756110896319926152610339698678242044331281614054280687626201, 218);
    node_index.insert(2258442912665439649622769515993460039756024697697714582745734598954638194578, 219);
    node_index.insert(1923650700608380821616803627552990459031020321822263486178231314533355655733, 220);
    node_index.insert(2986518118017342969503780420947472437589402926077471462482848861272477228312, 221);
    node_index.insert(1376854647019374078119330239267360951409489379782091263003138693189186942360, 222);
    node_index.insert(198240730684500640150208378390372236261578668680828477399089686184533568077, 223);
    node_index.insert(3462170494890148756353920888438422951629558416957219731886326073485272303293, 224);
    node_index.insert(1962794787101716104704617632188042176559313722630142376738121901804294635479, 225);
    node_index.insert(3543658181354415484267558193752745016120695110457258324241772949957846692556, 226);
    node_index.insert(1639567931862120316944501436886260401899290029152657621735471556017756287204, 227);
    node_index.insert(276906115036898363431472532063384799380588502189246195108179244619398122573, 228);
    node_index.insert(1688612378535896419145639370974516556754354024426334119285417929602809421417, 229);
    node_index.insert(1900856742887961294860606452087091565433946615340998932505585217008260199284, 230);
    node_index.insert(1994745673146063672704507741257916438992320779247322518848114182956855338846, 231);
    node_index.insert(317732098116912916426803629956464630867739016177287564523762567707556048388, 232);
    node_index.insert(183185162744998483916279696539633272281960879494855355809410691079920617538, 233);
    node_index.insert(812718678348845615902535342929848484559627011049424254851571716806665787796, 234);
    node_index.insert(2038363028502276012079681451211607450793579468204654461362919285986631376427, 235);
    node_index.insert(1793085232185396788431201066474830482250206866445371863392643763498207051737, 236);
    node_index.insert(1231068980569462694632292785007312399062788900495544845088286896946872507784, 237);
    node_index.insert(1170568805948089619951069568835367902073608869597176320885771860572493822356, 238);
    node_index.insert(1898761476030721073809911000456440899469436466214024558066563511195206253076, 239);
    node_index.insert(1845148036850471587991615536151224147494144166118349904456772646561958981726, 240);
    node_index.insert(2344471062856043882780975150016035555243247166055909681482571129294101566275, 241);
    node_index.insert(653328433462970624115202969195176161324222792601822869180355094773723597630, 242);
    node_index.insert(114246895071221273234664891799185329683593962782866490297943183822735743853, 243);
    node_index.insert(1639579594448270828062964813526406854188289732725122410674108031654949732498, 244);
    node_index.insert(2780014902778546963507306200269013268508620157564123919088277557212651266660, 245);
    node_index.insert(2704263294385747855546976291256505522591971779201162743731684600979771968703, 246);
    node_index.insert(3093668206137166809744199581300798281576557840525568813377913873332510301216, 247);
    node_index.insert(2743794648056839147566190792738700325779538550063233531691573479295033948774, 248);
    node_index.insert(2798268708043007987823290469469057887013592827991152425130480624165644530309, 249);
    node_index.insert(2656358495835759095543325181783754425097697418395968068218877742551382200798, 250);
    node_index.insert(1211642483429689718997906629094690895255021115365864106699680729506720772533, 251);
    node_index.insert(520077409223118195244629881107208371526219124916445328459593670003268088063, 252);
    node_index.insert(93985644132730505486074702539148551671332749940268672423984409734307038826, 253);
    node_index.insert(2165844361114289378140427479321032111399124460609987951006934492648782910662, 254);
    node_index.insert(2322493943028454082867530691966858982742310990292470419212790347747179778297, 255);
    node_index.insert(2615908339515304696322917477778214017890419528057651553511868145338556814263, 256);
    node_index.insert(3150582236998249277321327935386244867490444511574699521838653176378560421177, 257);
    node_index.insert(1103107773728853098047857302297018053744966397454215685594269601931897173813, 258);
    node_index.insert(2462888104946552276218747859210547576899594730986681517018159182872241472972, 259);
    node_index.insert(1822782996954736364207671980625502015384151358309637534162695059830270764415, 260);
    node_index.insert(1690407913081614803408370772341993172293324220095592583691141967652640882924, 261);
    node_index.insert(2642558305837421283534982287060935744349284785211420587185853131087673047203, 262);
    node_index.insert(1645061708552572683601193805292827293480185775595796068543057205561102862977, 263);
    node_index.insert(1115100144551332992408404866830581633211626253512249914424268892997737936721, 264);
    node_index.insert(2029312286053535430578516448426232851453073023399597136155107040467925497946, 265);
    node_index.insert(1610952727692918892425877833957523254232133070337645274822934193958434456916, 266);
    node_index.insert(662428532279306379385886696755615858985468313866277422510958436657659904244, 267);
    node_index.insert(2121688778521563675733277749294936071687309290217618891902555405280396666195, 268);
    node_index.insert(1250544055869538254919945306411049182065618600782314923936701812692458236239, 269);
    node_index.insert(2433210187513836481041490619244482143696828652364894632968595737630899850849, 270);
    node_index.insert(1986416994062666230383802413149323759750034990235891053142807906623137958668, 271);
    node_index.insert(3443580592216349255435974430753470598936386631924382537717445177613324263453, 272);
    node_index.insert(1856990019145994932971248843847906032192109575659752876368303741713036075343, 273);
    node_index.insert(1495973245653592166081243408533424066743191686744741505076951499973328710170, 274);
    node_index.insert(3149011590233272225803080114059308917528748800879621812239443987136907759492, 275);
    node_index.insert(1256253793249097778491586851395915710675714820964284887367516531463100834885, 276);
    node_index.insert(1367204028253064270272780398308197116331885826019160095546179574252301715156, 277);
    node_index.insert(35709238200630692715748986686945022954166018904577236782775928014549886022, 278);
    node_index.insert(1690135278907791721896273394500395617659804632461123206580263779149876929936, 279);
    node_index.insert(1340132720132606529304051489452456388877819458544295234058225753095208751193, 280);
    node_index.insert(3331101506676960306951459794126508483786181208250673671253397539513072458132, 281);
    node_index.insert(1968553031355756394708825093080871390157767243580480628290817791233056157107, 282);
    node_index.insert(53599261528661835152933160922762096660579017344453806771249603226050907848, 283);
    node_index.insert(188933663081214911444249635018177278663387625374691125466377969902713019621, 284);
    node_index.insert(317905895434545767284255767413356462762189087386136460253482303190436587218, 285);
    node_index.insert(2404162254541085231760680813601505690029404850776808917505037473688152037756, 286);
    node_index.insert(2070524117819985576710851631591732980136571210027318198462683963178232772229, 287);
    node_index.insert(2977732673923534725266834287473580070255896117124444510427007185933430096228, 288);
    node_index.insert(2691002333278957713443011611806033370513686570361159536559593042365352069734, 289);
    node_index.insert(2501056658256443021840450669962080434627257451490493532094505627906077978444, 290);
    node_index.insert(752214632321297227389533982755249702709099290982858996399241499752066312160, 291);
    node_index.insert(3448800753491155842114129004100047983009754105484160479464353352489980084140, 292);
    node_index.insert(64892389350915031853802519186198085356673555001527746672817227062724419181, 293);
    node_index.insert(563098654149893656588762203726902623711774087848496875232235325323158825123, 294);
    node_index.insert(1808459856037797833368527205274595746137777631576949576666294547513787126595, 295);
    node_index.insert(2883311440424297582626742079042005607052313377551398567677033877994104660820, 296);
    node_index.insert(2732057040478082695177499482239214078575629409050939314178930561462695647466, 297);
    node_index.insert(1865245660876203600821170014445408720139510943972171234626549027189619433876, 298);
    node_index.insert(1062399481432678273371070221789835025485187152438061974927030452068277983534, 299);
    node_index.insert(1326836229704718338713635010258548516893725329649241232215322739438741309441, 300);
    node_index.insert(1503102370299706793602218021009613510089798744088273532762911529854063326642, 301);
    node_index.insert(1352866959121328820176235219298449504263066536869995701443630225471282898545, 302);
    node_index.insert(1760245746450942490070971020546921925900566572654247478135265624492412513752, 303);

    let atts = TreeEnsembleAttributes {
        nodes_falsenodeids,
        nodes_featureids,
        nodes_missing_value_tracks_true,
        nodes_modes,
        nodes_nodeids,
        nodes_treeids,
        nodes_truenodeids,
        nodes_values
    };

    let mut ensemble: TreeEnsemble<FP16x16> = TreeEnsemble {
        atts, tree_ids, root_index, node_index
    };

    let mut classifier: TreeEnsembleClassifier<FP16x16> = TreeEnsembleClassifier {
        ensemble,
        class_ids,
        class_nodeids,
        class_treeids,
        class_weights,
        classlabels,
        base_values,
        post_transform
    };

    let (labels, mut scores) = TreeEnsembleClassifierTrait::predict(ref classifier, X);
    let mut arr: Span<usize> = labels;
    let a: usize = *arr.pop_front().unwrap();
    a
}