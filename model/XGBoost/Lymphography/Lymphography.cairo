use core::integer::u32;
use xgboost::inputs::input;
use orion::numbers::{FixedTrait, FP16x16};
use orion::operators::tensor::{Tensor, TensorTrait, FP16x16Tensor, U32Tensor};
use orion::operators::ml::tree_ensemble::core::{NODE_MODES, TreeEnsembleAttributes, TreeEnsemble};
use orion::operators::ml::tree_ensemble::tree_ensemble_classifier::{TreeEnsembleClassifier, POST_TRANSFORM, TreeEnsembleClassifierTrait};
use orion::operators::matrix::{MutMatrix, MutMatrixImpl};

fn main() -> u32 {
    let mut X = input();
    let class_ids: Span<usize> = array![0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3].span();
    let class_nodeids: Span<usize> = array![1, 2, 3, 5, 7, 8, 10, 11, 14, 15, 16, 5, 6, 7, 10, 11, 12, 15, 17, 18, 19, 21, 23, 24, 1, 2, 1, 2, 5, 6, 9, 10, 12, 13, 14, 18, 19, 20, 21, 24, 25, 26, 4, 5, 7, 8, 9, 13, 14, 15, 17, 20, 22, 23, 26, 27, 28, 1, 2, 1, 2, 5, 7, 8, 10, 12, 13, 14, 18, 19, 20, 21, 23, 24, 4, 5, 7, 8, 9, 13, 14, 15, 17, 20, 21, 23, 24, 1, 2, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 20, 21, 22, 23, 25, 26, 4, 5, 7, 8, 9, 13, 14, 15, 17, 20, 22, 23, 24, 1, 2, 1, 2, 6, 7, 9, 10, 12, 14, 15, 16, 20, 21, 22, 23, 25, 26, 4, 5, 7, 8, 9, 13, 14, 15, 17, 21, 22, 23, 25, 26, 1, 3, 4, 1, 2, 5, 6, 8, 9, 10, 12, 13, 14, 4, 6, 7, 8, 9, 13, 14, 15, 18, 19, 21, 24, 25, 26, 1, 2, 1, 2, 6, 7, 8, 10, 11, 12, 15, 16, 19, 20, 21, 22, 5, 6, 7, 9, 11, 13, 14, 16, 17, 19, 21, 22, 1, 3, 4, 1, 2, 6, 7, 8, 10, 11, 12, 15, 16, 19, 20, 21, 22, 3, 6, 7, 9, 10, 13, 14, 15, 16, 1, 2, 1, 2, 4, 7, 8, 10, 11, 12, 15, 16, 19, 20, 21, 22, 4, 5, 7, 8, 9, 12, 13, 15, 17, 20, 21, 22, 1, 2, 1, 2, 4, 5, 6, 9, 10, 14, 15, 16, 17, 18, 2, 5, 6, 7, 10, 12, 13, 16, 17, 19, 22, 23, 24, 1, 2].span();
    let class_treeids: Span<usize> = array![0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 32, 32, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 35, 35, 36, 36, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 39, 39].span();
    let class_weights: Span<FP16x16> = array![FP16x16 { mag: 11565, sign: false }, FP16x16 { mag: 12810, sign: true }, FP16x16 { mag: 17994, sign: false }, FP16x16 { mag: 11967, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 10724, sign: true }, FP16x16 { mag: 35182, sign: false }, FP16x16 { mag: 1709, sign: true }, FP16x16 { mag: 2313, sign: false }, FP16x16 { mag: 7864, sign: true }, FP16x16 { mag: 11565, sign: true }, FP16x16 { mag: 2313, sign: false }, FP16x16 { mag: 9830, sign: true }, FP16x16 { mag: 7864, sign: false }, FP16x16 { mag: 6939, sign: true }, FP16x16 { mag: 15728, sign: false }, FP16x16 { mag: 27812, sign: false }, FP16x16 { mag: 12153, sign: true }, FP16x16 { mag: 6939, sign: true }, FP16x16 { mag: 2313, sign: false }, FP16x16 { mag: 11565, sign: false }, FP16x16 { mag: 9074, sign: true }, FP16x16 { mag: 1709, sign: true }, FP16x16 { mag: 34649, sign: false }, FP16x16 { mag: 12805, sign: true }, FP16x16 { mag: 11967, sign: false }, FP16x16 { mag: 10421, sign: false }, FP16x16 { mag: 11951, sign: true }, FP16x16 { mag: 406, sign: false }, FP16x16 { mag: 20962, sign: false }, FP16x16 { mag: 1909, sign: false }, FP16x16 { mag: 18058, sign: false }, FP16x16 { mag: 577, sign: false }, FP16x16 { mag: 9127, sign: true }, FP16x16 { mag: 9833, sign: true }, FP16x16 { mag: 15913, sign: false }, FP16x16 { mag: 1116, sign: true }, FP16x16 { mag: 23063, sign: false }, FP16x16 { mag: 1509, sign: true }, FP16x16 { mag: 3556, sign: false }, FP16x16 { mag: 7291, sign: true }, FP16x16 { mag: 10770, sign: true }, FP16x16 { mag: 2256, sign: false }, FP16x16 { mag: 9281, sign: true }, FP16x16 { mag: 1574, sign: true }, FP16x16 { mag: 20694, sign: false }, FP16x16 { mag: 11108, sign: true }, FP16x16 { mag: 7026, sign: true }, FP16x16 { mag: 10753, sign: false }, FP16x16 { mag: 8988, sign: true }, FP16x16 { mag: 7438, sign: true }, FP16x16 { mag: 8055, sign: true }, FP16x16 { mag: 18700, sign: false }, FP16x16 { mag: 2508, sign: false }, FP16x16 { mag: 13496, sign: false }, FP16x16 { mag: 1697, sign: false }, FP16x16 { mag: 21833, sign: false }, FP16x16 { mag: 11937, sign: true }, FP16x16 { mag: 9503, sign: false }, FP16x16 { mag: 8959, sign: false }, FP16x16 { mag: 11334, sign: true }, FP16x16 { mag: 16450, sign: false }, FP16x16 { mag: 15397, sign: false }, FP16x16 { mag: 8339, sign: true }, FP16x16 { mag: 7508, sign: false }, FP16x16 { mag: 2276, sign: false }, FP16x16 { mag: 8608, sign: true }, FP16x16 { mag: 9366, sign: true }, FP16x16 { mag: 13294, sign: false }, FP16x16 { mag: 1733, sign: true }, FP16x16 { mag: 17620, sign: false }, FP16x16 { mag: 1310, sign: true }, FP16x16 { mag: 2147, sign: true }, FP16x16 { mag: 10080, sign: true }, FP16x16 { mag: 1581, sign: false }, FP16x16 { mag: 8531, sign: true }, FP16x16 { mag: 1749, sign: true }, FP16x16 { mag: 16168, sign: false }, FP16x16 { mag: 10414, sign: true }, FP16x16 { mag: 6839, sign: true }, FP16x16 { mag: 8935, sign: false }, FP16x16 { mag: 8231, sign: true }, FP16x16 { mag: 6817, sign: true }, FP16x16 { mag: 1295, sign: false }, FP16x16 { mag: 16374, sign: false }, FP16x16 { mag: 7479, sign: true }, FP16x16 { mag: 12299, sign: false }, FP16x16 { mag: 11317, sign: true }, FP16x16 { mag: 7764, sign: false }, FP16x16 { mag: 8088, sign: false }, FP16x16 { mag: 10851, sign: true }, FP16x16 { mag: 4651, sign: false }, FP16x16 { mag: 15078, sign: false }, FP16x16 { mag: 12947, sign: false }, FP16x16 { mag: 7595, sign: true }, FP16x16 { mag: 6348, sign: false }, FP16x16 { mag: 2194, sign: false }, FP16x16 { mag: 7955, sign: true }, FP16x16 { mag: 8874, sign: true }, FP16x16 { mag: 11461, sign: false }, FP16x16 { mag: 2076, sign: true }, FP16x16 { mag: 14811, sign: false }, FP16x16 { mag: 1022, sign: true }, FP16x16 { mag: 1288, sign: true }, FP16x16 { mag: 9484, sign: true }, FP16x16 { mag: 1451, sign: false }, FP16x16 { mag: 7834, sign: true }, FP16x16 { mag: 1663, sign: true }, FP16x16 { mag: 13277, sign: false }, FP16x16 { mag: 9825, sign: true }, FP16x16 { mag: 6501, sign: true }, FP16x16 { mag: 7543, sign: false }, FP16x16 { mag: 7543, sign: true }, FP16x16 { mag: 6243, sign: true }, FP16x16 { mag: 7411, sign: true }, FP16x16 { mag: 12693, sign: false }, FP16x16 { mag: 2249, sign: false }, FP16x16 { mag: 12954, sign: false }, FP16x16 { mag: 10832, sign: true }, FP16x16 { mag: 6590, sign: false }, FP16x16 { mag: 7263, sign: false }, FP16x16 { mag: 10467, sign: true }, FP16x16 { mag: 3775, sign: false }, FP16x16 { mag: 13075, sign: false }, FP16x16 { mag: 11194, sign: false }, FP16x16 { mag: 6914, sign: true }, FP16x16 { mag: 5648, sign: false }, FP16x16 { mag: 7938, sign: true }, FP16x16 { mag: 1652, sign: false }, FP16x16 { mag: 8421, sign: true }, FP16x16 { mag: 9977, sign: false }, FP16x16 { mag: 2244, sign: true }, FP16x16 { mag: 13125, sign: false }, FP16x16 { mag: 780, sign: true }, FP16x16 { mag: 408, sign: true }, FP16x16 { mag: 8991, sign: true }, FP16x16 { mag: 1270, sign: false }, FP16x16 { mag: 7237, sign: true }, FP16x16 { mag: 1532, sign: true }, FP16x16 { mag: 11359, sign: false }, FP16x16 { mag: 9303, sign: true }, FP16x16 { mag: 1864, sign: false }, FP16x16 { mag: 68, sign: true }, FP16x16 { mag: 7266, sign: true }, FP16x16 { mag: 2968, sign: true }, FP16x16 { mag: 39, sign: true }, FP16x16 { mag: 10240, sign: false }, FP16x16 { mag: 13977, sign: false }, FP16x16 { mag: 6156, sign: true }, FP16x16 { mag: 8838, sign: false }, FP16x16 { mag: 10548, sign: true }, FP16x16 { mag: 5647, sign: true }, FP16x16 { mag: 11867, sign: false }, FP16x16 { mag: 6627, sign: false }, FP16x16 { mag: 10145, sign: true }, FP16x16 { mag: 2619, sign: false }, FP16x16 { mag: 8479, sign: false }, FP16x16 { mag: 5529, sign: false }, FP16x16 { mag: 9636, sign: true }, FP16x16 { mag: 10535, sign: false }, FP16x16 { mag: 3111, sign: false }, FP16x16 { mag: 7037, sign: true }, FP16x16 { mag: 8462, sign: true }, FP16x16 { mag: 8021, sign: true }, FP16x16 { mag: 6482, sign: true }, FP16x16 { mag: 9580, sign: false }, FP16x16 { mag: 10988, sign: false }, FP16x16 { mag: 8801, sign: true }, FP16x16 { mag: 1554, sign: false }, FP16x16 { mag: 52, sign: false }, FP16x16 { mag: 6755, sign: true }, FP16x16 { mag: 7809, sign: true }, FP16x16 { mag: 8070, sign: false }, FP16x16 { mag: 12073, sign: false }, FP16x16 { mag: 3587, sign: false }, FP16x16 { mag: 4149, sign: true }, FP16x16 { mag: 11060, sign: false }, FP16x16 { mag: 10128, sign: true }, FP16x16 { mag: 5308, sign: false }, FP16x16 { mag: 5993, sign: false }, FP16x16 { mag: 9843, sign: true }, FP16x16 { mag: 975, sign: true }, FP16x16 { mag: 8526, sign: false }, FP16x16 { mag: 6878, sign: true }, FP16x16 { mag: 14407, sign: false }, FP16x16 { mag: 789, sign: false }, FP16x16 { mag: 8709, sign: true }, FP16x16 { mag: 11639, sign: false }, FP16x16 { mag: 3539, sign: false }, FP16x16 { mag: 1752, sign: false }, FP16x16 { mag: 4159, sign: true }, FP16x16 { mag: 7558, sign: false }, FP16x16 { mag: 7908, sign: true }, FP16x16 { mag: 5991, sign: true }, FP16x16 { mag: 6709, sign: false }, FP16x16 { mag: 7244, sign: true }, FP16x16 { mag: 2925, sign: true }, FP16x16 { mag: 9608, sign: false }, FP16x16 { mag: 6006, sign: true }, FP16x16 { mag: 5913, sign: false }, FP16x16 { mag: 43, sign: true }, FP16x16 { mag: 8656, sign: true }, FP16x16 { mag: 6466, sign: true }, FP16x16 { mag: 1289, sign: true }, FP16x16 { mag: 10301, sign: false }, FP16x16 { mag: 9924, sign: true }, FP16x16 { mag: 6897, sign: false }, FP16x16 { mag: 319, sign: false }, FP16x16 { mag: 5335, sign: false }, FP16x16 { mag: 9557, sign: true }, FP16x16 { mag: 806, sign: true }, FP16x16 { mag: 7547, sign: false }, FP16x16 { mag: 6337, sign: true }, FP16x16 { mag: 12773, sign: false }, FP16x16 { mag: 534, sign: false }, FP16x16 { mag: 8122, sign: true }, FP16x16 { mag: 10872, sign: false }, FP16x16 { mag: 2898, sign: false }, FP16x16 { mag: 1463, sign: false }, FP16x16 { mag: 3558, sign: true }, FP16x16 { mag: 6992, sign: false }, FP16x16 { mag: 7448, sign: true }, FP16x16 { mag: 4285, sign: true }, FP16x16 { mag: 6630, sign: false }, FP16x16 { mag: 10487, sign: true }, FP16x16 { mag: 2375, sign: true }, FP16x16 { mag: 10761, sign: false }, FP16x16 { mag: 1509, sign: false }, FP16x16 { mag: 8986, sign: true }, FP16x16 { mag: 5910, sign: false }, FP16x16 { mag: 8770, sign: false }, FP16x16 { mag: 9627, sign: true }, FP16x16 { mag: 4355, sign: false }, FP16x16 { mag: 4903, sign: false }, FP16x16 { mag: 9274, sign: true }, FP16x16 { mag: 1565, sign: true }, FP16x16 { mag: 9178, sign: false }, FP16x16 { mag: 2855, sign: false }, FP16x16 { mag: 8684, sign: false }, FP16x16 { mag: 4622, sign: true }, FP16x16 { mag: 7559, sign: true }, FP16x16 { mag: 10248, sign: false }, FP16x16 { mag: 2185, sign: false }, FP16x16 { mag: 1215, sign: false }, FP16x16 { mag: 3369, sign: true }, FP16x16 { mag: 6245, sign: false }, FP16x16 { mag: 6959, sign: true }, FP16x16 { mag: 17, sign: false }, FP16x16 { mag: 5506, sign: true }, FP16x16 { mag: 834, sign: true }, FP16x16 { mag: 8014, sign: false }, FP16x16 { mag: 7549, sign: true }, FP16x16 { mag: 1499, sign: false }, FP16x16 { mag: 5900, sign: true }, FP16x16 { mag: 1949, sign: true }, FP16x16 { mag: 10044, sign: false }, FP16x16 { mag: 1138, sign: false }, FP16x16 { mag: 3812, sign: true }, FP16x16 { mag: 9183, sign: false }, FP16x16 { mag: 9276, sign: true }, FP16x16 { mag: 4158, sign: false }, FP16x16 { mag: 3892, sign: false }, FP16x16 { mag: 9222, sign: true }, FP16x16 { mag: 2445, sign: true }, FP16x16 { mag: 7009, sign: false }, FP16x16 { mag: 8853, sign: false }, FP16x16 { mag: 2322, sign: false }, FP16x16 { mag: 8033, sign: true }, FP16x16 { mag: 4980, sign: false }, FP16x16 { mag: 824, sign: true }, FP16x16 { mag: 8351, sign: false }, FP16x16 { mag: 5675, sign: true }, FP16x16 { mag: 6455, sign: true }, FP16x16 { mag: 6662, sign: true }, FP16x16 { mag: 5136, sign: false }, FP16x16 { mag: 470, sign: false }, FP16x16 { mag: 6035, sign: true }, FP16x16 { mag: 7248, sign: true }, FP16x16 { mag: 6182, sign: false }, FP16x16 { mag: 1828, sign: false }, FP16x16 { mag: 4496, sign: false }, FP16x16 { mag: 3620, sign: true }, FP16x16 { mag: 8954, sign: false }, FP16x16 { mag: 3174, sign: false }, FP16x16 { mag: 3943, sign: true }, FP16x16 { mag: 8001, sign: false }, FP16x16 { mag: 9110, sign: true }, FP16x16 { mag: 4030, sign: false }].span();
    let classlabels: Span<usize> = array![0, 1, 2, 3].span();
    let nodes_falsenodeids: Span<usize> = array![2, 0, 0, 12, 9, 4, 0, 6, 0, 8, 0, 0, 11, 0, 0, 16, 15, 0, 0, 0, 20, 13, 8, 7, 6, 0, 0, 0, 12, 11, 0, 0, 0, 19, 16, 0, 18, 0, 0, 0, 22, 0, 24, 0, 0, 2, 0, 0, 2, 0, 0, 22, 15, 14, 7, 6, 0, 0, 11, 10, 0, 0, 13, 0, 0, 0, 21, 20, 19, 0, 0, 0, 0, 26, 25, 0, 0, 0, 10, 9, 6, 5, 0, 0, 8, 0, 0, 0, 16, 15, 14, 0, 0, 0, 18, 0, 24, 21, 0, 23, 0, 0, 28, 27, 0, 0, 0, 2, 0, 0, 2, 0, 0, 22, 15, 14, 9, 6, 0, 8, 0, 0, 11, 0, 13, 0, 0, 0, 21, 20, 19, 0, 0, 0, 0, 24, 0, 0, 10, 9, 6, 5, 0, 0, 8, 0, 0, 0, 16, 15, 14, 0, 0, 0, 18, 0, 22, 21, 0, 0, 24, 0, 0, 2, 0, 0, 2, 0, 0, 24, 17, 16, 11, 8, 7, 0, 0, 10, 0, 0, 13, 0, 15, 0, 0, 0, 23, 22, 21, 0, 0, 0, 0, 26, 0, 0, 10, 9, 6, 5, 0, 0, 8, 0, 0, 0, 16, 15, 14, 0, 0, 0, 18, 0, 24, 21, 0, 23, 0, 0, 0, 2, 0, 0, 2, 0, 0, 24, 17, 16, 11, 8, 7, 0, 0, 10, 0, 0, 13, 0, 15, 0, 0, 0, 23, 22, 21, 0, 0, 0, 0, 26, 0, 0, 10, 9, 6, 5, 0, 0, 8, 0, 0, 0, 16, 15, 14, 0, 0, 0, 18, 0, 24, 23, 22, 0, 0, 0, 26, 0, 0, 2, 0, 4, 0, 0, 2, 0, 0, 14, 11, 10, 7, 6, 0, 0, 9, 0, 0, 0, 13, 0, 0, 0, 10, 9, 8, 5, 0, 7, 0, 0, 0, 0, 16, 15, 14, 0, 0, 0, 20, 19, 0, 0, 22, 0, 26, 25, 0, 0, 0, 2, 0, 0, 2, 0, 0, 22, 13, 12, 9, 8, 7, 0, 0, 0, 11, 0, 0, 0, 17, 16, 0, 0, 21, 20, 0, 0, 0, 0, 18, 15, 8, 7, 6, 0, 0, 0, 10, 0, 12, 0, 14, 0, 0, 17, 0, 0, 20, 0, 22, 0, 0, 2, 0, 4, 0, 0, 2, 0, 0, 22, 13, 12, 9, 8, 7, 0, 0, 0, 11, 0, 0, 0, 17, 16, 0, 0, 21, 20, 0, 0, 0, 0, 16, 11, 4, 0, 8, 7, 0, 0, 10, 0, 0, 15, 14, 0, 0, 0, 0, 2, 0, 0, 2, 0, 0, 22, 13, 12, 5, 0, 9, 8, 0, 0, 11, 0, 0, 0, 17, 16, 0, 0, 21, 20, 0, 0, 0, 0, 10, 9, 6, 5, 0, 0, 8, 0, 0, 0, 14, 13, 0, 0, 16, 0, 18, 0, 22, 21, 0, 0, 0, 2, 0, 0, 2, 0, 0, 18, 7, 6, 5, 0, 0, 0, 11, 10, 0, 0, 17, 16, 15, 0, 0, 0, 0, 0, 8, 3, 0, 7, 6, 0, 0, 0, 14, 11, 0, 13, 0, 0, 18, 17, 0, 0, 20, 0, 24, 23, 0, 0, 0, 2, 0, 0].span();
    let nodes_featureids: Span<usize> = array![11, 0, 0, 17, 1, 7, 0, 14, 0, 16, 0, 0, 12, 0, 0, 15, 0, 0, 0, 0, 17, 1, 14, 17, 15, 0, 0, 0, 7, 15, 0, 0, 0, 12, 11, 0, 7, 0, 0, 0, 7, 0, 14, 0, 0, 8, 0, 0, 11, 0, 0, 17, 1, 5, 14, 15, 0, 0, 15, 0, 0, 0, 7, 0, 0, 0, 12, 12, 13, 0, 0, 0, 0, 17, 0, 0, 0, 0, 17, 1, 14, 15, 0, 0, 15, 0, 0, 0, 7, 1, 9, 0, 0, 0, 13, 0, 14, 13, 0, 4, 0, 0, 17, 0, 0, 0, 0, 8, 0, 0, 11, 0, 0, 17, 1, 5, 17, 14, 0, 15, 0, 0, 7, 0, 13, 0, 0, 0, 12, 12, 14, 0, 0, 0, 0, 15, 0, 0, 17, 1, 14, 15, 0, 0, 15, 0, 0, 0, 7, 1, 9, 0, 0, 0, 13, 0, 2, 16, 0, 0, 6, 0, 0, 8, 0, 0, 11, 0, 0, 17, 1, 5, 17, 14, 13, 0, 0, 15, 0, 0, 7, 0, 13, 0, 0, 0, 12, 12, 11, 0, 0, 0, 0, 17, 0, 0, 17, 1, 14, 15, 0, 0, 15, 0, 0, 0, 7, 1, 9, 0, 0, 0, 13, 0, 14, 13, 0, 4, 0, 0, 0, 8, 0, 0, 11, 0, 0, 17, 1, 5, 17, 14, 13, 0, 0, 15, 0, 0, 13, 0, 13, 0, 0, 0, 12, 12, 17, 0, 0, 0, 0, 15, 0, 0, 17, 1, 14, 15, 0, 0, 15, 0, 0, 0, 7, 11, 5, 0, 0, 0, 13, 0, 2, 13, 17, 0, 0, 0, 6, 0, 0, 6, 0, 8, 0, 0, 11, 0, 0, 17, 12, 12, 17, 13, 0, 0, 16, 0, 0, 0, 13, 0, 0, 0, 17, 1, 5, 14, 0, 15, 0, 0, 0, 0, 7, 11, 5, 0, 0, 0, 14, 13, 0, 0, 12, 0, 12, 1, 0, 0, 0, 8, 0, 0, 11, 0, 0, 17, 1, 5, 10, 14, 15, 0, 0, 0, 15, 0, 0, 0, 13, 17, 0, 0, 2, 5, 0, 0, 0, 0, 9, 10, 7, 12, 9, 0, 0, 0, 13, 0, 1, 0, 17, 0, 0, 11, 0, 0, 14, 0, 15, 0, 0, 6, 0, 15, 0, 0, 11, 0, 0, 17, 1, 5, 10, 14, 15, 0, 0, 0, 15, 0, 0, 0, 13, 17, 0, 0, 2, 9, 0, 0, 0, 0, 12, 1, 9, 0, 15, 10, 0, 0, 14, 0, 0, 17, 12, 0, 0, 0, 0, 6, 0, 0, 11, 0, 0, 17, 1, 5, 12, 0, 14, 0, 0, 0, 15, 0, 0, 0, 13, 17, 0, 0, 2, 5, 0, 0, 0, 0, 17, 1, 14, 15, 0, 0, 15, 0, 0, 0, 7, 11, 0, 0, 16, 0, 12, 0, 12, 10, 0, 0, 0, 8, 0, 0, 13, 0, 0, 17, 17, 13, 16, 0, 0, 0, 12, 13, 0, 0, 12, 10, 14, 0, 0, 0, 0, 0, 7, 9, 0, 1, 12, 0, 0, 0, 14, 13, 0, 1, 0, 0, 17, 13, 0, 0, 12, 0, 12, 13, 0, 0, 0, 6, 0, 0].span();
    let nodes_missing_value_tracks_true: Span<usize> = array![1, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0].span();
    let nodes_modes: Span<NODE_MODES> = array![NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::LEAF, NODE_MODES::BRANCH_LT, NODE_MODES::LEAF, NODE_MODES::LEAF].span();
    let nodes_nodeids: Span<usize> = array![0, 1, 2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 0, 1, 2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 0, 1, 2, 0, 1, 2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 0, 1, 2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2, 0, 1, 2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 1, 2, 3, 4, 0, 1, 2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0, 1, 2, 0, 1, 2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 3, 4, 0, 1, 2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 1, 2, 0, 1, 2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1, 2, 0, 1, 2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0, 1, 2].span();
    let nodes_treeids: Span<usize> = array![0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 15, 15, 15, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 24, 24, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 28, 28, 28, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 31, 31, 31, 32, 32, 32, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 34, 35, 35, 35, 36, 36, 36, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 38, 39, 39, 39].span();
    let nodes_truenodeids: Span<usize> = array![1, 0, 0, 1, 2, 3, 0, 5, 0, 7, 0, 0, 10, 0, 0, 13, 14, 0, 0, 0, 1, 2, 3, 4, 5, 0, 0, 0, 9, 10, 0, 0, 0, 14, 15, 0, 17, 0, 0, 0, 21, 0, 23, 0, 0, 1, 0, 0, 1, 0, 0, 1, 2, 3, 4, 5, 0, 0, 8, 9, 0, 0, 12, 0, 0, 0, 16, 17, 18, 0, 0, 0, 0, 23, 24, 0, 0, 0, 1, 2, 3, 4, 0, 0, 7, 0, 0, 0, 11, 12, 13, 0, 0, 0, 17, 0, 19, 20, 0, 22, 0, 0, 25, 26, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 2, 3, 4, 5, 0, 7, 0, 0, 10, 0, 12, 0, 0, 0, 16, 17, 18, 0, 0, 0, 0, 23, 0, 0, 1, 2, 3, 4, 0, 0, 7, 0, 0, 0, 11, 12, 13, 0, 0, 0, 17, 0, 19, 20, 0, 0, 23, 0, 0, 1, 0, 0, 1, 0, 0, 1, 2, 3, 4, 5, 6, 0, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 18, 19, 20, 0, 0, 0, 0, 25, 0, 0, 1, 2, 3, 4, 0, 0, 7, 0, 0, 0, 11, 12, 13, 0, 0, 0, 17, 0, 19, 20, 0, 22, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 2, 3, 4, 5, 6, 0, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 18, 19, 20, 0, 0, 0, 0, 25, 0, 0, 1, 2, 3, 4, 0, 0, 7, 0, 0, 0, 11, 12, 13, 0, 0, 0, 17, 0, 19, 20, 21, 0, 0, 0, 25, 0, 0, 1, 0, 3, 0, 0, 1, 0, 0, 1, 2, 3, 4, 5, 0, 0, 8, 0, 0, 0, 12, 0, 0, 0, 1, 2, 3, 4, 0, 6, 0, 0, 0, 0, 11, 12, 13, 0, 0, 0, 17, 18, 0, 0, 21, 0, 23, 24, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 2, 3, 4, 5, 6, 0, 0, 0, 10, 0, 0, 0, 14, 15, 0, 0, 18, 19, 0, 0, 0, 0, 1, 2, 3, 4, 5, 0, 0, 0, 9, 0, 11, 0, 13, 0, 0, 16, 0, 0, 19, 0, 21, 0, 0, 1, 0, 3, 0, 0, 1, 0, 0, 1, 2, 3, 4, 5, 6, 0, 0, 0, 10, 0, 0, 0, 14, 15, 0, 0, 18, 19, 0, 0, 0, 0, 1, 2, 3, 0, 5, 6, 0, 0, 9, 0, 0, 12, 13, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 2, 3, 4, 0, 6, 7, 0, 0, 10, 0, 0, 0, 14, 15, 0, 0, 18, 19, 0, 0, 0, 0, 1, 2, 3, 4, 0, 0, 7, 0, 0, 0, 11, 12, 0, 0, 15, 0, 17, 0, 19, 20, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 2, 3, 4, 0, 0, 0, 8, 9, 0, 0, 12, 13, 14, 0, 0, 0, 0, 0, 1, 2, 0, 4, 5, 0, 0, 0, 9, 10, 0, 12, 0, 0, 15, 16, 0, 0, 19, 0, 21, 22, 0, 0, 0, 1, 0, 0].span();
    let nodes_values: Span<FP16x16> = array![FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 23405, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 14043, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 23405, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 14043, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 14043, sign: false }, FP16x16 { mag: 43690, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 23405, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 14043, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 23405, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 14043, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 43690, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 14043, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 23405, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 14043, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 60854, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 23405, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 51492, sign: false }, FP16x16 { mag: 14043, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 14043, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 51492, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 51492, sign: false }, FP16x16 { mag: 14043, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 14043, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 51492, sign: false }, FP16x16 { mag: 14043, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 23405, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 51492, sign: false }, FP16x16 { mag: 14043, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 16384, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 14043, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 23405, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 10922, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 49152, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 4681, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 54613, sign: false }, FP16x16 { mag: 42130, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 0, sign: false }, FP16x16 { mag: 0, sign: false }].span();
    let base_values: Option<Span<FP16x16>> = Option::Some(array![FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }, FP16x16 { mag: 32768, sign: false }].span());
    let post_transform = POST_TRANSFORM::SOFTMAX;

    let tree_ids: Span<usize> = array![0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39].span();
let mut root_index: Felt252Dict<usize> = Default::default();
    root_index.insert(0, 0);
    root_index.insert(1, 3);
    root_index.insert(2, 20);
    root_index.insert(3, 45);
    root_index.insert(4, 48);
    root_index.insert(5, 51);
    root_index.insert(6, 78);
    root_index.insert(7, 107);
    root_index.insert(8, 110);
    root_index.insert(9, 113);
    root_index.insert(10, 138);
    root_index.insert(11, 163);
    root_index.insert(12, 166);
    root_index.insert(13, 169);
    root_index.insert(14, 196);
    root_index.insert(15, 221);
    root_index.insert(16, 224);
    root_index.insert(17, 227);
    root_index.insert(18, 254);
    root_index.insert(19, 281);
    root_index.insert(20, 286);
    root_index.insert(21, 289);
    root_index.insert(22, 304);
    root_index.insert(23, 331);
    root_index.insert(24, 334);
    root_index.insert(25, 337);
    root_index.insert(26, 360);
    root_index.insert(27, 383);
    root_index.insert(28, 388);
    root_index.insert(29, 391);
    root_index.insert(30, 414);
    root_index.insert(31, 431);
    root_index.insert(32, 434);
    root_index.insert(33, 437);
    root_index.insert(34, 460);
    root_index.insert(35, 483);
    root_index.insert(36, 486);
    root_index.insert(37, 489);
    root_index.insert(38, 508);
    root_index.insert(39, 533);
let mut node_index: Felt252Dict<usize> = Default::default();
    node_index.insert(2089986280348253421170679821480865132823066470938446095505822317253594081284, 0);
    node_index.insert(2001140082530619239661729809084578298299223810202097622761632384561112390979, 1);
    node_index.insert(2592670241084192212354027440049085852792506518781954896144296316131790403900, 2);
    node_index.insert(1089549915800264549621536909767699778745926517555586332772759280702396009108, 3);
    node_index.insert(1321142004022994845681377299801403567378503530250467610343381590909832171180, 4);
    node_index.insert(2592987851775965742543459319508348457290966253241455514226127639100457844774, 5);
    node_index.insert(2492755623019086109032247218615964389726368532160653497039005814484393419348, 6);
    node_index.insert(1323616023845704258113538348000047149470450086307731200728039607710316625916, 7);
    node_index.insert(2602806075100213744247558189988576480101725415744802768676593239465413062437, 8);
    node_index.insert(2133001354671050566009032930947037407966162226953928247738970920578517401509, 9);
    node_index.insert(2028511445532887286219926414461404880922973379000283365640739306412060589984, 10);
    node_index.insert(2172916877564771226634785492487495706550975402295255580723040851110825214452, 11);
    node_index.insert(443365385840578145598469834664300070798229423724186017253666927387247171605, 12);
    node_index.insert(729855921817393983434977875314769926547493289803739783677327742608094432090, 13);
    node_index.insert(1914743748046569081169775800674968385592598418967909792072913293994383786914, 14);
    node_index.insert(1905186476891772648228095881141294869145589945808189361436653544018360062058, 15);
    node_index.insert(3478750059048257206950245886704031215117884591408631705246789143235927594297, 16);
    node_index.insert(1360650719458388540862313348610603767210254471680075689691583578268553163977, 17);
    node_index.insert(2835713808086902981032735997270657320272844799255056915522524373324489601373, 18);
    node_index.insert(2986663520528822735284621823964735413577139476770655672122727824709194687603, 19);
    node_index.insert(1637368371864026355245122316446106576874611007407245016652355316950184561542, 20);
    node_index.insert(1207699383798263883125605407307435965808923448511613904826718551574712750645, 21);
    node_index.insert(1180550645873507273865212362837104046225859416703538577277065670066180087996, 22);
    node_index.insert(2472368796876167851123807933892689310864199328863324614163271115835436643256, 23);
    node_index.insert(2178161520066714737684323463974044933282313051386084149915030950231093462467, 24);
    node_index.insert(3173857952392006478115535740648337122591944728347430823115535852278920741329, 25);
    node_index.insert(3520866866675103377451014823284046708949378458998098483918774175589256898262, 26);
    node_index.insert(2177941723204159354958359305495360053392108189585761207084264896971635476845, 27);
    node_index.insert(2864394597864040652203681823189877789250870157950998029096571449554775379175, 28);
    node_index.insert(2897433825911865985719211501544370326016492217831301730855907643627594369342, 29);
    node_index.insert(859854829566932180582991726609554142743294771126929508994399727707123524911, 30);
    node_index.insert(3340556370013659658837668538361919723611956717010849115344219019131584232987, 31);
    node_index.insert(969684220953017614408764005228364528747533427394672852952823310808481653043, 32);
    node_index.insert(2517958524955101484176646974264278027523630430782643866142783043852607952501, 33);
    node_index.insert(3562411576101596305100373214898963557357005221009821819112293537238776158186, 34);
    node_index.insert(749698053908647177037465778486662825000910076701946452954539222617221207046, 35);
    node_index.insert(3388946524721421849714599546545678324338215767142993729985868447908100375132, 36);
    node_index.insert(7637028948727922733190725937767998455218464297313212093014958707917020671, 37);
    node_index.insert(2517306361976272603816496570574411846655171384183949645847139939357796693732, 38);
    node_index.insert(2420913215565887543799662323254877493998803114195008143295091289913293256497, 39);
    node_index.insert(2875257908119852201562215382296572595654261721400839230360586454297239617850, 40);
    node_index.insert(1939077377152096562358173157873289577680472319148247371233138009534014937220, 41);
    node_index.insert(1446072649950821241933384277965301246106855819219171501158751949060726623809, 42);
    node_index.insert(3130267397385492591575354583425648344229275099238257091713993766138436159335, 43);
    node_index.insert(1627740877632935460866966989915636240876204276362161938570742257408612034825, 44);
    node_index.insert(936823097115478672163131070534991867793647843312823827742596382032679996195, 45);
    node_index.insert(2908682032041418908903105681227249033483541201006723240850136728317167492227, 46);
    node_index.insert(576657123605396437968823113955952586959670965011232700393892413073919304299, 47);
    node_index.insert(469486474782544164430568959439120883383782181399389907385047779197726806430, 48);
    node_index.insert(3512521406437956009189089258567111789473785799907488469636118378769715425964, 49);
    node_index.insert(2556139128341700567231916301725351155453738182692001295135848448652163014397, 50);
    node_index.insert(2941083907689010536497253969578701440794094793277200004061830176674600429738, 51);
    node_index.insert(3515557115945123685249720924176918246289668839127088842764552624387741006658, 52);
    node_index.insert(1086529665842980980708131000626441572702884934518178946087373814825190924452, 53);
    node_index.insert(1577600695648543593850511011274446155472648910099879524512420959593356117933, 54);
    node_index.insert(369637003681923374235868884090690746347960427214527191195034764982555476019, 55);
    node_index.insert(3125779721945763288433380755626503099347902113189413000518025153445630158401, 56);
    node_index.insert(887847247223813684398612989470912626224213579404697697378648600264021898263, 57);
    node_index.insert(16619444747250762036595255150391108469240603040189807430655609336266920022, 58);
    node_index.insert(2628075195767292674590700502403560116319020921182344709587066307456648985625, 59);
    node_index.insert(2438502160866250745334110983854834216010319001088729328948569151470890138896, 60);
    node_index.insert(3295369764201403697020931568280448079372569883207512770197546917303872097494, 61);
    node_index.insert(2800494936737086207139723655044366722420138476182528385634707980262139812406, 62);
    node_index.insert(3132606217959475072121780021316596349712964739992677349194234125743516464040, 63);
    node_index.insert(656021941148415165431333659891582324769158567011100828420172665422894153586, 64);
    node_index.insert(502703338856261709292864170013545966845935535351074954483261434537992997511, 65);
    node_index.insert(73512124624850034004821169525490264470298981460850014453376484774048511459, 66);
    node_index.insert(1392730751941015904834170795863393469166319919808784999782168001951603553895, 67);
    node_index.insert(2988289546868592194315183945254444543212197816696981958493913794886551611513, 68);
    node_index.insert(979431136069079287135593162000984658226807290458275991182246872277036129356, 69);
    node_index.insert(856943209398923396711050319478771501189050037852652426222556691686929632402, 70);
    node_index.insert(1941012177571374253726872982008395598780355640039797272195174713692653277594, 71);
    node_index.insert(1426149190894741167512944894422442006670565444064614612171880572398408084056, 72);
    node_index.insert(307400047828830747378246360491053993977321654276483718143843435219876451230, 73);
    node_index.insert(1009421008998306236551501046932020462914916879257304842595864258293742761740, 74);
    node_index.insert(3256176412377098988575417840128465531077504085894328717051379936447514191186, 75);
    node_index.insert(3305848966554532095290247342580752807146796932135482143293219897531216578299, 76);
    node_index.insert(607625718043780271475974770351771515546943468919419748816862096929654406337, 77);
    node_index.insert(2741690337285522037147443857948052150995543108052651970979313688522374979162, 78);
    node_index.insert(2650761223990278311391161549562769924185646525933398576366599729646470331982, 79);
    node_index.insert(2394106477146207452133044987332160354989937730594050309156799249985649638789, 80);
    node_index.insert(3221546555590725210494412430124213369510944559726456557849915592640050076870, 81);
    node_index.insert(2228295198404333119017490955293049364627235124737441027193226305830899856739, 82);
    node_index.insert(1500728334208813541595897459030132460053541518563429199208970697149622864812, 83);
    node_index.insert(3370962038708719437204954491911331590397946488012391643100034534008512344333, 84);
    node_index.insert(1316763448112859394321117487731514423037681243887874196205047698610445360084, 85);
    node_index.insert(2675592129551529371290790685310559984125358643115246876322043698639381749698, 86);
    node_index.insert(1528859248215310863238401709462632347578470922545446103095571132030945850144, 87);
    node_index.insert(3611690624124252450410480577094491432815522006798435310057357000073481753133, 88);
    node_index.insert(1439036764276032966983559284365334079695374463347000527220102853724684269113, 89);
    node_index.insert(1258410373276784381071702787851529424400817190522556443076585835045523985589, 90);
    node_index.insert(3159488699709692726987767167803380927365063049737489808755263770463033523780, 91);
    node_index.insert(2807310041875874050147290560038271475334414983815271892746689403530695500639, 92);
    node_index.insert(2760947231432611426328726855671585230160496130265856290376499201036050674179, 93);
    node_index.insert(2142335695882300759307997271840765816056010244005970160668770654636608188271, 94);
    node_index.insert(2160448941858509289149478473971004089859456397815176217599070133949273511883, 95);
    node_index.insert(926997528372746383010369955865819772959221265445185234692339748986760791340, 96);
    node_index.insert(1672721509649019380284968447290565280623486696599930956019706859770296716577, 97);
    node_index.insert(2044080853056546244274530781077755499242200512671943937125918468536782172831, 98);
    node_index.insert(1504601056661299458885429075200265364428656859551761054760045995437482980030, 99);
    node_index.insert(163158120268944789882730811689216610896032498223040702467679914336094711763, 100);
    node_index.insert(1907397333478479142428618991020436874602209770802915399403021719372799685074, 101);
    node_index.insert(108692015205244708734235833879450021132747113676085717268144240055994191881, 102);
    node_index.insert(981807391152472621378135497321855113084793600143467941644235042162299415346, 103);
    node_index.insert(2072405531077937403998757822996919197154392212738629318971991811226339073650, 104);
    node_index.insert(232366471498875663468206944797420870187179632212573899580695296930913470560, 105);
    node_index.insert(2139523020619835728131188669449122469629968768643180522491992470702975042551, 106);
    node_index.insert(2258442912665439649622769515993460039756024697697714582745734598954638194578, 107);
    node_index.insert(1923650700608380821616803627552990459031020321822263486178231314533355655733, 108);
    node_index.insert(2986518118017342969503780420947472437589402926077471462482848861272477228312, 109);
    node_index.insert(2743794648056839147566190792738700325779538550063233531691573479295033948774, 110);
    node_index.insert(2798268708043007987823290469469057887013592827991152425130480624165644530309, 111);
    node_index.insert(2656358495835759095543325181783754425097697418395968068218877742551382200798, 112);
    node_index.insert(3149011590233272225803080114059308917528748800879621812239443987136907759492, 113);
    node_index.insert(1256253793249097778491586851395915710675714820964284887367516531463100834885, 114);
    node_index.insert(1367204028253064270272780398308197116331885826019160095546179574252301715156, 115);
    node_index.insert(35709238200630692715748986686945022954166018904577236782775928014549886022, 116);
    node_index.insert(1690135278907791721896273394500395617659804632461123206580263779149876929936, 117);
    node_index.insert(1340132720132606529304051489452456388877819458544295234058225753095208751193, 118);
    node_index.insert(3331101506676960306951459794126508483786181208250673671253397539513072458132, 119);
    node_index.insert(1968553031355756394708825093080871390157767243580480628290817791233056157107, 120);
    node_index.insert(53599261528661835152933160922762096660579017344453806771249603226050907848, 121);
    node_index.insert(188933663081214911444249635018177278663387625374691125466377969902713019621, 122);
    node_index.insert(317905895434545767284255767413356462762189087386136460253482303190436587218, 123);
    node_index.insert(2404162254541085231760680813601505690029404850776808917505037473688152037756, 124);
    node_index.insert(2070524117819985576710851631591732980136571210027318198462683963178232772229, 125);
    node_index.insert(2977732673923534725266834287473580070255896117124444510427007185933430096228, 126);
    node_index.insert(2691002333278957713443011611806033370513686570361159536559593042365352069734, 127);
    node_index.insert(2501056658256443021840450669962080434627257451490493532094505627906077978444, 128);
    node_index.insert(752214632321297227389533982755249702709099290982858996399241499752066312160, 129);
    node_index.insert(3448800753491155842114129004100047983009754105484160479464353352489980084140, 130);
    node_index.insert(64892389350915031853802519186198085356673555001527746672817227062724419181, 131);
    node_index.insert(563098654149893656588762203726902623711774087848496875232235325323158825123, 132);
    node_index.insert(1808459856037797833368527205274595746137777631576949576666294547513787126595, 133);
    node_index.insert(2883311440424297582626742079042005607052313377551398567677033877994104660820, 134);
    node_index.insert(2732057040478082695177499482239214078575629409050939314178930561462695647466, 135);
    node_index.insert(1865245660876203600821170014445408720139510943972171234626549027189619433876, 136);
    node_index.insert(1062399481432678273371070221789835025485187152438061974927030452068277983534, 137);
    node_index.insert(2466881358002133364822637278001945633159199669109451817445969730922553850042, 138);
    node_index.insert(1183542427150969392626018984893467106583918766494481729382281203507622641472, 139);
    node_index.insert(1431776777056506698604647341381142583651190852368505702998607062255574129691, 140);
    node_index.insert(972438690926792325118135862382080018232032520094840957911232540298409406549, 141);
    node_index.insert(991084547888087131868886386324316432359028694627723192745237264535932014843, 142);
    node_index.insert(1426554411334771946627122235132505593863675277058690422710188841592243493500, 143);
    node_index.insert(1363909600341144275090208595536779376858146627250961583203694662295241812700, 144);
    node_index.insert(2535427936407932761861381573383136997958868317407701167331468890664673428752, 145);
    node_index.insert(358201485054646638265237224658728272117621129993093986898837614087243093706, 146);
    node_index.insert(984340227557499365732049562912502114481390532130141690542470478771934966112, 147);
    node_index.insert(418833408673493216205652607655074076925038965276777238750396089537612730999, 148);
    node_index.insert(2786116088662035069066189777680990419908396521409751409107279532930231316343, 149);
    node_index.insert(1659092710388621686301059798465891545927742041646885496745317845571750326589, 150);
    node_index.insert(3027485450085095907058605935220119072773118206296554312613455326257654118934, 151);
    node_index.insert(505965866137867515485675569556430295059632254656406640298252798905637446180, 152);
    node_index.insert(1471280258183770643216482588559421766889064721505517348059267862151440682780, 153);
    node_index.insert(2750981660630317554676822132789351646249035487841584776932518138929723012354, 154);
    node_index.insert(785769543565438559816435591619280222433006173454858628316364290952235058, 155);
    node_index.insert(2499050698916722932168112457945095261878983279468207449221544823524190683378, 156);
    node_index.insert(333250450167557525114093667305016819489981621149712501909041777487348946646, 157);
    node_index.insert(714641900944728802212167960696434185974750810184047840196974916361868503487, 158);
    node_index.insert(2845923106170228729824339639142806984233692040689218175697530971082326609606, 159);
    node_index.insert(1590294026375037858492482790345232012039193714597865606576038804842764780808, 160);
    node_index.insert(1602649649437402918735771784402103148703324695273437221983464621564647707246, 161);
    node_index.insert(2466503373129807146673149662002461504028782041800847877946151788099419726821, 162);
    node_index.insert(1602195742608144856779311879863141684990052756940086705696922586637104021594, 163);
    node_index.insert(1048567650354208837177239552642912548937251398366633889054635887815999325708, 164);
    node_index.insert(952677257945065829974687215393982028642635658856182966013273240312944498520, 165);
    node_index.insert(108289613193197664273020636632286985109898695751875754699753665839093823971, 166);
    node_index.insert(3121766102057675359404485811098033715935569748843064794474925162873415592191, 167);
    node_index.insert(2842835726332689313526529973184323329623799418065470244629244349557488332087, 168);
    node_index.insert(1744979027318172964422327404361273580944397535401008023582199876115845114710, 169);
    node_index.insert(3243570830066835454087140059665140442995908735608860300830191054712060175676, 170);
    node_index.insert(3380860025071115828135533364448960345664402938799669705180316161453747776812, 171);
    node_index.insert(289733928291422171570659757954000263796467129100516441407291220571896851292, 172);
    node_index.insert(1953138310648956024269190916206716324541670224299230904312462701388831706877, 173);
    node_index.insert(2418987497718029726832205573255380324894683275318721508871060776440222492309, 174);
    node_index.insert(1100101705117804436357654925347030569160364329535731077470316176094396712038, 175);
    node_index.insert(733127715336927118606256462621006632416946268805450937772229546433042521421, 176);
    node_index.insert(1406519602506869125839236735311118884229828213719149837260854691613975997836, 177);
    node_index.insert(549424874293546964686138354433163010661558437871519320395174176733016793061, 178);
    node_index.insert(1758189714356281135118662844656488129536717730759407727576557993346533907696, 179);
    node_index.insert(1561567910406230078187012958260932499999009286774755230472916739641339820247, 180);
    node_index.insert(2320817590688479603548796963491984909919976674521189163015003923221871850007, 181);
    node_index.insert(290476677152802235605104424954585341076588527902717792151748267349257884730, 182);
    node_index.insert(1306797318454484322755483434638570027601464389329353377403240569214320352155, 183);
    node_index.insert(3528645773230526545287291329513080335905449453442059343957435578403955927748, 184);
    node_index.insert(2212630931880958405479343667629061581550444337558302386365106486477362678884, 185);
    node_index.insert(1018786327623464064972221250631589015646284290960120704532512966207521571551, 186);
    node_index.insert(229484796130991463529735675751116723771276568143027205149713595780466093524, 187);
    node_index.insert(3154661097984964215078874699481921427404240503568074671957256090546571052949, 188);
    node_index.insert(366320602472292802217583729805135469162473174663245129809507263638441973961, 189);
    node_index.insert(2607686489861294892108731572556193680825054469715235275586868929152171661719, 190);
    node_index.insert(2496636634039254107191220034995573093882862427354516881538224671575023175345, 191);
    node_index.insert(2440364935122694540754867306473126647605664080520406649557820223133969597741, 192);
    node_index.insert(501141703826694851456387312698611196490637557859008845746830015880767782728, 193);
    node_index.insert(1642950825629556458197743373044067461072601891538162973925532264961196348916, 194);
    node_index.insert(1722055829739245793209190760089236310443811436022434569802319071579239275087, 195);
    node_index.insert(1398462719893551374966620069731053475358010744206910073704581388509079808738, 196);
    node_index.insert(2932104990710995491165499208787426296543942318468262181074380705763249912480, 197);
    node_index.insert(1352327956410336250118662269404377770784993255864929446536502728911484427472, 198);
    node_index.insert(512141981192653777354314890546016960676867395426731826410027531503616663631, 199);
    node_index.insert(3506000480399786945731503406271917240022044946679358289040065268208299861777, 200);
    node_index.insert(2585970149770899244718593537196553182368312374131478958649846430872123560833, 201);
    node_index.insert(90076454508904655614246376810970822494240542463792212186146380473817826531, 202);
    node_index.insert(193249753264562328399183129502906237619350521783475455954855166607739230500, 203);
    node_index.insert(2258440615058254029478359682082494591491725245284400402019654393900880176408, 204);
    node_index.insert(2138712376674806018163083760917348515452301000046529158341458928694279352253, 205);
    node_index.insert(2807508494179939401160996073751632622252299196838570465630252814463974211104, 206);
    node_index.insert(1019201328607748824474740377899785530437547877572055672871993742481424316509, 207);
    node_index.insert(3505714589079453108011417066069720836964820061701273627788924579993699933820, 208);
    node_index.insert(3304685002439008182842344898378952888495462135200330987315858284396841349362, 209);
    node_index.insert(3224013771297243051671972462986610709830645854047072945364915707481514811265, 210);
    node_index.insert(2383545704972905313143759003188711615092171034264803833980308148420829572524, 211);
    node_index.insert(1231008150110046047333400529478890424290692718432610979250533200258317873479, 212);
    node_index.insert(2117667911071963478380762779004208630836213609809862391734470693757275196147, 213);
    node_index.insert(831782538441442355215754257476389542112470088555086951732961501420238207235, 214);
    node_index.insert(2807142315748858201455090120768246979120962596352788148458144376108776364695, 215);
    node_index.insert(893986251082390496445212520033778492339246440732764618517066823396161094907, 216);
    node_index.insert(3302219481677643649539575916080666419492489641865786681293255270846047725155, 217);
    node_index.insert(2451028886098383599882680187353780670908884866238680237422961924339327753872, 218);
    node_index.insert(339851154411610743185216291401240367976722774026733205990324069459873188961, 219);
    node_index.insert(2631298938382894711697331676341863777068281422419728196072020763322319502353, 220);
    node_index.insert(1901504716446065256269731867411614915820094303385453967240909894258876518659, 221);
    node_index.insert(2342634400607154708670819644735766454051191896102045087656554437413520673159, 222);
    node_index.insert(2042972120432632004804992194872886828188714797262971027898719585329973786140, 223);
    node_index.insert(1798359565014827938354315398572476100256405791288404013872250892856849691828, 224);
    node_index.insert(3497930283373730048819686947750591200849592984585603643342875353326392194382, 225);
    node_index.insert(49159210227923046234273721687186127789670623748290282669921094555490563152, 226);
    node_index.insert(2017341737295481246155952905134235557561671392775186148749240339082999851285, 227);
    node_index.insert(2675393266147713586540390711506539058245204064012332842480150188957678948642, 228);
    node_index.insert(1174320953419110275179679712994777767970657923950362192771715320325831893719, 229);
    node_index.insert(33937463903191888230815642502975961825698474039859721115366149885182728562, 230);
    node_index.insert(3230832381355607450741945124470920607805481360860820557308094751239351857915, 231);
    node_index.insert(453024555957937096337387161335900119868142312085774505495515016909441578944, 232);
    node_index.insert(1384495923746710197935746888852135612136740059659778632849452726883542898673, 233);
    node_index.insert(544537961835531156188412311847947986587930443528263587308904558406963774272, 234);
    node_index.insert(2728438011557501688161336513166117047762631789542052730783839867035493549188, 235);
    node_index.insert(2291164688345953882823726169789035550574604141145570508928610180273484536180, 236);
    node_index.insert(1031201074499518340943440329283458797750917954029150658641244949367040467738, 237);
    node_index.insert(743608988551521890753231235693969156302379180506891568677993129482724367068, 238);
    node_index.insert(1043417339055630323369155026118098092738362438750801146818271210630826990960, 239);
    node_index.insert(1805435170382552565527843607848319135189321163537158599754845047201125502293, 240);
    node_index.insert(864535071397396582882600888256284904253136168310967459886367319516540844671, 241);
    node_index.insert(105348307808714971707355353132918270332373243465701309080997577832984734602, 242);
    node_index.insert(1328744760834022293725947162407257009200266481992020801120414900196058535899, 243);
    node_index.insert(1651432182751537318146296033511337561613257227952768015083210464870795486338, 244);
    node_index.insert(1182379065521381595924946792878238206571186838520735570437051353282837306476, 245);
    node_index.insert(143475812833691647891221218686706863791715403539165952835220152070449921923, 246);
    node_index.insert(1747852547779906914651628547724345006564694392351737022251403514957204341418, 247);
    node_index.insert(3008631214432941001294967003346336393118359263505937117365277456687364015775, 248);
    node_index.insert(1733063720028092921251728260909444531654879108169556290574281753280171126151, 249);
    node_index.insert(1863481467967697364354183661768803080567424378442474300201329963852286840989, 250);
    node_index.insert(2313825812248673597379697688872619131008574098666329590589688339596023795153, 251);
    node_index.insert(175988344752171536215252878808199816383106031582763515765523353043693489149, 252);
    node_index.insert(1181530748228850499383614799597084629433532568072142958482429786333355095162, 253);
    node_index.insert(2005609713613971083569730539855781060205500887155286737608240129703145008240, 254);
    node_index.insert(1938582584258338730735878877878677528935257985543012616039874508134968503229, 255);
    node_index.insert(602031794088793330349673093703182401607695223031859881472597886958206737986, 256);
    node_index.insert(708113740382739776120838691985660267219327467914879680089389175082768408583, 257);
    node_index.insert(2347135847807611223792315040677498937185946059353375555547873583067254130883, 258);
    node_index.insert(1774386306390375443742680226459919375176612801430177973884064175685557733612, 259);
    node_index.insert(1115300594142736732120560543954295704889179999955771152165051906517017059990, 260);
    node_index.insert(1649451397574140763143931996368646788189769327014873833752667708858973754414, 261);
    node_index.insert(2750619522583353481534177929087286674695871588574849146827928263148456278950, 262);
    node_index.insert(1416244892989138357256841308168207768296335565784596388468260815896629784151, 263);
    node_index.insert(1997238164727448714455215456801644740748055054192377630713337316836615349351, 264);
    node_index.insert(3310642634247937666636890136477444814967053157048214625234780441953296845738, 265);
    node_index.insert(3134362338414764598567091514665516700360937794958389024243650869560699700038, 266);
    node_index.insert(3256217910616395293991926902870245426027984201545245506537954367851858204194, 267);
    node_index.insert(2001108129272455779294468674061011025835938015009590692028336229222749740019, 268);
    node_index.insert(773049554093388875755514729392774613306742000661949481927875100116637962838, 269);
    node_index.insert(3378537130232606228526375110578508758752488623024899913731271886740587509684, 270);
    node_index.insert(2756892767743849206577516612704081579604927793824241584961207226645961891440, 271);
    node_index.insert(632005533208771764010626504885974015856225962137626822125693836849428006664, 272);
    node_index.insert(1266124258502411038375278247120885625862705702856450041264897388407007622033, 273);
    node_index.insert(992211441982753361206849678397327000602340921081224006450520487309528215275, 274);
    node_index.insert(2169397905046198508876344520404707387033561916276376136625738726908288466213, 275);
    node_index.insert(510615047032859485743516874736809315410781048811309969907153780541523548590, 276);
    node_index.insert(3605998984764354383799752555405362339871481261063719778912200515589691537298, 277);
    node_index.insert(103946203575608364077834638979979610620967564989991643707129602544095740687, 278);
    node_index.insert(1490620964698783117889217757072111507761965127330190627437405160850229952723, 279);
    node_index.insert(585485347294263446187777772994529150265828729959690146685615261004013088413, 280);
    node_index.insert(3448995911069818038857594699452213191125033055828900916127480888562343134855, 281);
    node_index.insert(694441606487233543357610438873534908734548082720884370387398420315477789828, 282);
    node_index.insert(597541471833237499619329235557116049144965796360920672434662066360950273594, 283);
    node_index.insert(943352487530717527458209262144828430502222574259572194276717313521948410631, 284);
    node_index.insert(1837807953466086232851139042153308474077075180401446290159520516521762626697, 285);
    node_index.insert(863102740359469064208350212255578989777360247304628303691047272311665540549, 286);
    node_index.insert(1546170469693331057685767647163210997435398791854125937885688522307012221348, 287);
    node_index.insert(1449275071102314837783566626980758998963737493418232585653094618837080840554, 288);
    node_index.insert(1485445020346165906255248681301905749937376961180871925086218332677909156603, 289);
    node_index.insert(3156606750941688466303304743424767721761739343108206863775009483231225943584, 290);
    node_index.insert(92194528276771605719434380931894269977870018710968393185001169123067894064, 291);
    node_index.insert(2172113288928946773858164888287407392511131650559030529477693054219775323910, 292);
    node_index.insert(3064570890882091718944639785868277551066812816435506020353196104341690813903, 293);
    node_index.insert(1429023480958489546058424823787979716730885083700676985341013788981982464692, 294);
    node_index.insert(961763966892422519804150874766601061956211073245742256795318312063435505972, 295);
    node_index.insert(122537927889980125585691792477497888865491540284421568281023323649319717446, 296);
    node_index.insert(253758996460927835766305059863152636964609486215578254599629315370711482457, 297);
    node_index.insert(2846516668669035118994594526601627658732577102726321170884588190710753185988, 298);
    node_index.insert(580519278313086859112572982159080108585900882537400488757417635719009968494, 299);
    node_index.insert(2434139343755218137421594296861386187625559164086452046704903424116323258779, 300);
    node_index.insert(1740927728213948561868837619192912376565059862847588098622424256272736716501, 301);
    node_index.insert(2324296329226571985642921079481464097580903555689698304080055928954664737629, 302);
    node_index.insert(489235280017961403055961803015261621257872216476448271567084834321148149605, 303);
    node_index.insert(900843776628869095842392032788189492233078812152813397832903878589633056377, 304);
    node_index.insert(2977730235565230139359688263419835536347671334868196477504334799643754355042, 305);
    node_index.insert(886036718756895177446882047945715748168696112114609507233877991791793965448, 306);
    node_index.insert(690633889716624434677672939175461712549684187607704468749467256553512926937, 307);
    node_index.insert(1007259422194864096467321328839734794999546610506683992728493345746539509072, 308);
    node_index.insert(2716056574597937872135657204617373288438106751903272696180443420369299694657, 309);
    node_index.insert(1185605736903872453746521051157493242433213565302871389306563559800991076016, 310);
    node_index.insert(378633997989415448323141990415083426003014918622360185720000299807622550247, 311);
    node_index.insert(280605053224506425198846009863070141837796755229414335051764989422618345874, 312);
    node_index.insert(1522417537817014984409057232707351034611802087748330595656534205635890585654, 313);
    node_index.insert(2870111380543086557169329917042393115378492267809820946257410548190782394029, 314);
    node_index.insert(3194930203658404390625504584260831368928162466055031799351629709840419653332, 315);
    node_index.insert(2294821348330355704081068063674942828685796782007540120378483652117654368208, 316);
    node_index.insert(624071458689735992121149410571843918247739926019213553478419406346350829801, 317);
    node_index.insert(3034936149678975770987808823795808690990199634440632685911676139736829632542, 318);
    node_index.insert(509959012809768120255874522614873218461375598284359508482036121734431922233, 319);
    node_index.insert(3147715704691567888168795511296990946035255159168597437733482161288915979151, 320);
    node_index.insert(3413795065213031894249946866641462338361293925067807109550268036064230432523, 321);
    node_index.insert(2185885593676366119866602070370963035143019977638492366517879735594091939351, 322);
    node_index.insert(1315810591679382991197240391702643927282944201053749461579655930033563347971, 323);
    node_index.insert(1607262220204767101969441267984312737894244452262784596313967089425258760400, 324);
    node_index.insert(870579106060873388526797272929468811081221383895267875708968442835438927583, 325);
    node_index.insert(986838847309880238868547372274940394392270464604762096290244205563033660299, 326);
    node_index.insert(2514605276375991320785623355124523707926259839097370382591591462097139681976, 327);
    node_index.insert(3187278341310589901348898648772915187356872578237151870752582883299002423192, 328);
    node_index.insert(3486712973519142093689683577702513488722248744089035728904118000174031161775, 329);
    node_index.insert(2658084028924381549218119909001567247580962752878588191136164049612903016137, 330);
    node_index.insert(3328320341141598096676572331686026435109492665031365053408653079689078671154, 331);
    node_index.insert(490421097117586408026586959556259109407325741858916058020034654364163085567, 332);
    node_index.insert(658703487938413674041539468518400908567835118348818752273965721284121653677, 333);
    node_index.insert(3040393303064235409123029443843570136174868409519784248230541132797440323641, 334);
    node_index.insert(2350643951558905987951001431053207051197170256330463295783682739055185682885, 335);
    node_index.insert(2458141537053938027535006939534457636562189613276290899195398843748329842469, 336);
    node_index.insert(2372264378636910324181215552780751393495517136504008526087815157936299073206, 337);
    node_index.insert(3594334860858900419027719494991615202081221749774690557072136191797036841030, 338);
    node_index.insert(561761507351273254574299626060599751429571869916050027217942782066019358030, 339);
    node_index.insert(2649958511896619304831126612860009755478676680611288948021339846080563774028, 340);
    node_index.insert(16170664024491513845994591584180975943645947068223432188175979470508390034, 341);
    node_index.insert(814826020417429628849518105128263818323980915081386801584544004510924004561, 342);
    node_index.insert(3414707772200375769577035505594377290885785988205601177021243349009103210656, 343);
    node_index.insert(612570064046054683897355234068344504554139043147382698126390287702404840796, 344);
    node_index.insert(400003516435772275879846403692484701687809280438948731079533582410136107946, 345);
    node_index.insert(1028518550636536172541423854052736338506588408786148263029194772999367685585, 346);
    node_index.insert(264505471490581149227828307229388893426160496597600027825233926635780304322, 347);
    node_index.insert(2727120739705782148569018552279090825974781742944751994955572392186496143657, 348);
    node_index.insert(2898063505637519436336929645474921683024922095892478681532038818004842767059, 349);
    node_index.insert(332928689717914829790029449747777885763220528835235384345226511074422147817, 350);
    node_index.insert(2520053020804106923885104855876515889149124290511902154352891285182924987436, 351);
    node_index.insert(2405107102020196412053086570459680675587091046941926452933818806984552129387, 352);
    node_index.insert(2081262253856762745914463806116005396867752152334214823611964884419746021787, 353);
    node_index.insert(3107817308374881804304768762428134239927673692329781165397566022948805751352, 354);
    node_index.insert(2017916564936709972196067277577950882147777735150294212325354636952779440411, 355);
    node_index.insert(3284310414513645268925343250977459899443700180174138477942810710600212051069, 356);
    node_index.insert(1060561041237153532454003855304760741045063449337200225679212674518639543101, 357);
    node_index.insert(3343299185208755391298193904428388711816264427490883401959553038310557858562, 358);
    node_index.insert(1196285354686452292495488730350337296539331024264521609492134113446462031879, 359);
    node_index.insert(2762899979886449697775903164251909656053550902322568838529801236463172863864, 360);
    node_index.insert(96230476333472367292088003479392846911668311618815845294471665603593864083, 361);
    node_index.insert(1369434440767862319960208049698504788320960774232879724280117316982534650193, 362);
    node_index.insert(2024621847884265898218489264737458834270061187194941746620500787079400176884, 363);
    node_index.insert(1807505530087998551854838238942081975706714981342010316493930295188666464940, 364);
    node_index.insert(3193182781460352804100542333619182422817198195577817083400740407235951854282, 365);
    node_index.insert(719269627361473138072704027560940884347703182600504999523705874462427822783, 366);
    node_index.insert(199763484407549915100622136121046439856596782627644808080190924463117946230, 367);
    node_index.insert(3075889053121342958978755163069155227856011595290543019994445047362546529678, 368);
    node_index.insert(2065452757095262231235988847379572883263276591912870043527737640245929700004, 369);
    node_index.insert(355745084212972202302070558320761066998491972464402499239251447374863268996, 370);
    node_index.insert(2899019447615641272615975196623871458022424142908036573169409388133029302426, 371);
    node_index.insert(1212706241799359434607972122292780272619726557981136460133234499638109990972, 372);
    node_index.insert(355058117925810566580189335529271273025946704156986737104204817576079444470, 373);
    node_index.insert(2648238309962095550166757358760739346974454201544176722624302400517404348225, 374);
    node_index.insert(3579508387226264883205555698128356017184650820038802306076248112516234401556, 375);
    node_index.insert(795743481406845512254396905685973093589539672221796543524807327773348213130, 376);
    node_index.insert(2550070946538500250951377971679324624767392810377993286994442917405878464304, 377);
    node_index.insert(3137390707292826361645408524097871153721701650922323770367884824826562913661, 378);
    node_index.insert(2037337063779905800815632011625680271242049816837573126237252145041777290001, 379);
    node_index.insert(2876015700272557839889468427868994187884854603786780210685497106354361147670, 380);
    node_index.insert(1621231041127648839520229447931210647194971302438723648400762434889253774189, 381);
    node_index.insert(1609332296243295092538027745852035668372062866431477750934641820359395897000, 382);
    node_index.insert(1256426694963459690523405474782682900655353255288895132116069789184783004863, 383);
    node_index.insert(1480942784604782481947935934901384162247989888269331261880373449270545013773, 384);
    node_index.insert(1517285499547985653662412497830230693164818630246912917362097237933215286769, 385);
    node_index.insert(1775850300486095625315352560841918103386799050783892484180849210397312047913, 386);
    node_index.insert(2128745048370263957300510818330711821104917422838702078718700125278796610857, 387);
    node_index.insert(2052253867188246865634385442842098208489880204748745318795500528396002438643, 388);
    node_index.insert(823811640053860064462641613549091334297367639108581677320681253170766237119, 389);
    node_index.insert(3179889427390602460685268655663400734144277245525156921438940049219220298472, 390);
    node_index.insert(3010441263787617485144232164262690884517292459461887802066090347178160489446, 391);
    node_index.insert(1575202856616858204066291142973659090691398987707763324629342621278044048285, 392);
    node_index.insert(3150767609235658512538174793063598453685235159814426872421706497892360993473, 393);
    node_index.insert(1380581146511630386393189541396220147704823992328592397504084198853794580698, 394);
    node_index.insert(3546631549955366734370849149420831006324559095944560863653820622232224546550, 395);
    node_index.insert(2422649094473161246756539655756759674414739750872345962828377035942451178181, 396);
    node_index.insert(467407964382163001399696808561154594953644217725853491571328775989321758068, 397);
    node_index.insert(849929458040364146408257059231776372627018776702209238122457748344978958972, 398);
    node_index.insert(3566156168086977355916875900161224657813920171675126712565874003378530558519, 399);
    node_index.insert(2406733399801575816568430722063651002597366574472090882774205630741339578081, 400);
    node_index.insert(2880253653254102712569076587825584149937392065236195501495195835526269998664, 401);
    node_index.insert(3504616038397232400560945271367846744289494537134293801588375631643575452328, 402);
    node_index.insert(2621081795202894688907115112716687073353880143236167334557388068578772701077, 403);
    node_index.insert(840532309304096781656457386203001918377402476956562046139821612057028903640, 404);
    node_index.insert(385972837889588279331933337950064478400105572608936280036380145282491562622, 405);
    node_index.insert(2398597695995438189443028217185517258068157003375541456642781009896357771656, 406);
    node_index.insert(1082758502820953258944947701043544322739579155626366409877609051737340512067, 407);
    node_index.insert(404964708576963685776958693128116861617402247979109086506894051860993326101, 408);
    node_index.insert(3497863491116496645315318674142451521422664840340609865958987938339405971117, 409);
    node_index.insert(2748934752748599587691382152799071999765788258197978688718199274819869007230, 410);
    node_index.insert(1084006302916428304362577692519652687701898018253489025192145814179936531795, 411);
    node_index.insert(137309723055022915726301666666535105791497443288371375121221698746618141156, 412);
    node_index.insert(1917872658426432868299807568083372285464146963165893853229997832524899409600, 413);
    node_index.insert(2810431988481695461417148219596043474790991687777393392127083786467414097023, 414);
    node_index.insert(2668303977292109594218165549431706660277475416304558283917935571063120119619, 415);
    node_index.insert(775077831086268747685749623039943718352069980301731753822172089211081968004, 416);
    node_index.insert(3090788003186441392649192821414504889094443187145074321087442086807171723091, 417);
    node_index.insert(1747877719494878675330654512691378207436164258900560542576645030101944654198, 418);
    node_index.insert(3607133695811607774484926488307585684838753674968215372488432122502489478790, 419);
    node_index.insert(1582262658561221533346147004855029385726061205562428282549580291858127856994, 420);
    node_index.insert(896943864900516907894926241005349309305398446144384803877863748261947837950, 421);
    node_index.insert(2906532809788581696610090793428186236284901176560888680159052277051115624881, 422);
    node_index.insert(1147489123955519076982738284596519285585448283025787356755979587480099349549, 423);
    node_index.insert(45236901378742524825310860579264618694257419237504182306727460275463330053, 424);
    node_index.insert(69897627666564748140297742698327847286999159647773628406682751661129516974, 425);
    node_index.insert(3497173797961123411812027374291961299167086063287496410347001031730258485329, 426);
    node_index.insert(1377851082354999209916205352967735001098120010474604329443948812718296518246, 427);
    node_index.insert(858493499357270187306874752066383256344659691473989971335580389701696676265, 428);
    node_index.insert(1369825359445761565516414317675901043548971822076764508964880291004086849866, 429);
    node_index.insert(1246702587877198335424572614455623590095367646700380372206697169565359620356, 430);
    node_index.insert(1855807191027959492272087099093127895996925391310249384853724014589354065880, 431);
    node_index.insert(1129931679721407382546843666485768437924105660568409460122129529320833750538, 432);
    node_index.insert(615190837154554050699251218174262050387027596382481883911392248587222883039, 433);
    node_index.insert(606689980960819825217599323540711634241712783276063345307862820473909229433, 434);
    node_index.insert(1435517226781720725534280962421721726680639579406355452425224073262988429300, 435);
    node_index.insert(218090268678609515304322263152602616587525765268609577600069603942431353921, 436);
    node_index.insert(1416765255842618003923310557773125835035600865242012452755344332853237071588, 437);
    node_index.insert(2160818454084740153200984358082017003049189165070506564327863557823286418982, 438);
    node_index.insert(2277613560213189153618961724214214762768786100426878373029659162621843745947, 439);
    node_index.insert(2310985831016527007003204927936454453271291287169255250680051621970559607259, 440);
    node_index.insert(384116465256348490432262897955508326078213593152164252876243767071765438369, 441);
    node_index.insert(913791360469318801521536875710563032831028789032449519400305232366807371552, 442);
    node_index.insert(2639703075915909250662156360795318341076451693039651644747592303460048353705, 443);
    node_index.insert(1651315846541693747562882911880222567705598818286928398225468884692377653410, 444);
    node_index.insert(1895049488677099163883691519546276471375319098650040379311849905512359744646, 445);
    node_index.insert(507528377435000131712637946610161125602049584652645832056489368453429210127, 446);
    node_index.insert(2479718942396834266124620717523895962669634685258519112672583386314285714559, 447);
    node_index.insert(1173035354804905459878749440388680647494947649920319198518255620067291664066, 448);
    node_index.insert(1177122998127591433476950581617883025204705698959034382876639607470725841443, 449);
    node_index.insert(339889226951574445972815102812971495749474282318668377500433899241874686375, 450);
    node_index.insert(283833602364437871453614297499974707517107364029545619273581302564118504446, 451);
    node_index.insert(620285648370822196652116713923477943487133583108026339872160995322133566643, 452);
    node_index.insert(2867372121102413349812351704191168436708133471684686106440711674379520051293, 453);
    node_index.insert(3362701940374667356169668963573885378657192617138289069912841950376621322785, 454);
    node_index.insert(471988663652372269450800062156110664962476345419994304411880542677519623370, 455);
    node_index.insert(1045641702821881794924448850368153816171934157573309093708887403531457182884, 456);
    node_index.insert(316118777358515184883512660407370754015643215851963396076769083233629487436, 457);
    node_index.insert(503182922920932129547409180564454023279170085703041626992829628401388846113, 458);
    node_index.insert(2846888955649077099667111534115437211365087668438487124356532783627165278915, 459);
    node_index.insert(1702928269486420556114444750664242098751524332365203170460523987041089838264, 460);
    node_index.insert(1737969280824721161290349436642041003594826887387004385941684426614913572142, 461);
    node_index.insert(1836781227583069779219160796082107414389044990588064523362453501233348447941, 462);
    node_index.insert(1835413265224915965797476997991004024975537945172393162125625790064443576056, 463);
    node_index.insert(3577969631049740847270927026689997982663987892468748730512805116117892393850, 464);
    node_index.insert(125184167455727684497312111598873828527136579269573677836666274982798717502, 465);
    node_index.insert(916920587948602885142894279978223961143345580053232718370266827220007051042, 466);
    node_index.insert(1135558104669773446199788744536203987648820209155634743614295303291149076972, 467);
    node_index.insert(569319179470172407891644686289133669143857652922477416322603752001435538727, 468);
    node_index.insert(708479191678663838864477929483291726366857929151365047282747737140785874530, 469);
    node_index.insert(894797356644424157469883798933288444016396597836679590536117923242137751471, 470);
    node_index.insert(106794936974032219068766685180946997881483883984990535346218271381357459858, 471);
    node_index.insert(3300514991891458433281437195414789666840701710750513753382171774683310867270, 472);
    node_index.insert(3142652379454467188109575609584651625912417417322449531414720901067711640665, 473);
    node_index.insert(841624533505852681684007923399401964888101096075342604299628933091858353617, 474);
    node_index.insert(2124410830623037428085752226241487547763117040150071812401035028239226213964, 475);
    node_index.insert(103035430476193837437842511443050142557134661480668484893011055315861000407, 476);
    node_index.insert(293637710932336084823827761806740072041374877556913257327845048204563984536, 477);
    node_index.insert(657001542625943629106717478459336270845484273273523709024512787774373836427, 478);
    node_index.insert(1942011589746219608168872929249687716913471930691355066555283622675745934762, 479);
    node_index.insert(1962654312395205784699194759641750898527029968918367342972939464162067283755, 480);
    node_index.insert(1877649826568558129931290212283982515182026238865152826829720180933881838343, 481);
    node_index.insert(569068944337413120540457002154462233598088047123953361485028434273121222088, 482);
    node_index.insert(28144270457860219994540784271960633810341592210783112627495867462125341399, 483);
    node_index.insert(18799720310179697131131685103073374725225088093137210429877994125787778970, 484);
    node_index.insert(1907592993586083015232420056709823715260089051436724566279976031737880496896, 485);
    node_index.insert(975811662252404486364210566960617261119194048048057753124467019139043082780, 486);
    node_index.insert(1203783440064645674993999134182043448681625959197437382492961638345396223736, 487);
    node_index.insert(2965915082841270961849114004997788133178882537752364543376213115956218668068, 488);
    node_index.insert(812670197976491819516894685617320108477880322210855848068169089021149996096, 489);
    node_index.insert(3027346615299202831427725205593487015338134891720614685771024785557600089179, 490);
    node_index.insert(2262141666650713711957596690663865336482476990485123650378827031749065539153, 491);
    node_index.insert(1400540991080624038172644934842794351966643174543989040900762912239368862046, 492);
    node_index.insert(2674007638051766565985483780338803878333369059554977104285252505360641540495, 493);
    node_index.insert(1033124209713299336366003445825338799789172133117519822901603897886440052417, 494);
    node_index.insert(3180263989700145549710540561555901566827355721367876899090219537269090239699, 495);
    node_index.insert(724266204254744242831363174031708373989042138569625217442324112468442354709, 496);
    node_index.insert(2090181579592572798773005232544197738331503165386648842312372676975282630395, 497);
    node_index.insert(2012167715713431542953066456672344481159776356293211124401491569459946755912, 498);
    node_index.insert(1569499391897546206749242194617176892085304665370215936716516672909053285777, 499);
    node_index.insert(959426228009766156165762845321552822907326503261021520203041948455748304683, 500);
    node_index.insert(3403066579627330660246356473526268001738790662215140716296783954834931817697, 501);
    node_index.insert(1572796836921294450159088132037226594203723043005011238407634601714936781374, 502);
    node_index.insert(3545429972446957527229959636881150313532976571940628932527189235356351993310, 503);
    node_index.insert(2273206400027335144625294123883798149262243958828831334916698875549848374193, 504);
    node_index.insert(1359642590566125284646970201361930748378034740226723657296667107125129184261, 505);
    node_index.insert(1086985056958567179475339943794868939736844121478212845881720539667539509611, 506);
    node_index.insert(1245266492055041749508588531153574451144577988183725648963460692691720068982, 507);
    node_index.insert(421562970220145069512752674992305658674527798369971776682952067577148320293, 508);
    node_index.insert(2538381879635566632080772386938834217090950791368259623569067719971406576562, 509);
    node_index.insert(785250261230865465845710679769065027126620330511677439151523279843384735707, 510);
    node_index.insert(2675774331086498540624933902003307031193934996193179623025584398058530854168, 511);
    node_index.insert(2029231873060600943780848288222784448626407095295744170402030958579757213210, 512);
    node_index.insert(1369682932505030338857908219046067199211450301530342842349893155867238618958, 513);
    node_index.insert(1617787748514986090736380478953387380692432482267497991595252403068144096248, 514);
    node_index.insert(298581901040189072278001148796869436800005707712750464200573558400196355794, 515);
    node_index.insert(2915780834624707756184844711775801600271458380800621795631283771448087489188, 516);
    node_index.insert(968450706152573528180515066569402726995641875952007601778759370002435060169, 517);
    node_index.insert(3326333770605221929694360813508662156899084367570669404993806969087877169060, 518);
    node_index.insert(1373920735404367324776495745775740617806244809331388213530258702101286626348, 519);
    node_index.insert(3474850981866101745166933733574477122423710483396770340250874146551006743393, 520);
    node_index.insert(932641011338910240059647022632733691397593575381595824354482863727097586942, 521);
    node_index.insert(2491465456081974508359324160284403096564402923010054254116778440583892302905, 522);
    node_index.insert(1631274384386579346908198268696388862586788740483295606045907998107471287070, 523);
    node_index.insert(1305963700863304503920461394131286640725765087966808785793439897695839934301, 524);
    node_index.insert(3402733876740621499934972635383847012625240982991399982692867473171376883135, 525);
    node_index.insert(2026261238044551648529983568557921629521627785210291854865383389812037609361, 526);
    node_index.insert(925830848844248685227801897767427094874617710925567035832506338643262017309, 527);
    node_index.insert(99169640895556270115365236555184884664383016029112385429668575599451204139, 528);
    node_index.insert(1246674795590149574119401018104890910131368968317399129598702128289682246162, 529);
    node_index.insert(688650679675405449838610596498436870623067064036842896862918792255683416580, 530);
    node_index.insert(1265450093079206302225127612866502096137698554248128211148183808254792130825, 531);
    node_index.insert(1992644255342904730676822358766912825036140462176046356349485285022879090469, 532);
    node_index.insert(1726726174168495543694837532694031638106884725300692897396886304872712092148, 533);
    node_index.insert(564104024341316111401760557020882561501025314369970835483370897970254325207, 534);
    node_index.insert(3080725628534418360139430407210520788655436992406730489445684097308935812337, 535);

    let atts = TreeEnsembleAttributes {
        nodes_falsenodeids,
        nodes_featureids,
        nodes_missing_value_tracks_true,
        nodes_modes,
        nodes_nodeids,
        nodes_treeids,
        nodes_truenodeids,
        nodes_values
    };

    let mut ensemble: TreeEnsemble<FP16x16> = TreeEnsemble {
        atts, tree_ids, root_index, node_index
    };

    let mut classifier: TreeEnsembleClassifier<FP16x16> = TreeEnsembleClassifier {
        ensemble,
        class_ids,
        class_nodeids,
        class_treeids,
        class_weights,
        classlabels,
        base_values,
        post_transform
    };

    let (labels, mut scores) = TreeEnsembleClassifierTrait::predict(ref classifier, X);
    let mut arr: Span<usize> = labels;
    let a: usize = *arr.pop_front().unwrap();
    a
}